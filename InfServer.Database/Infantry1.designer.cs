#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfServer.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Data")]
	public partial class InfantryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void InsertstatsYearly(statsYearly instance);
    partial void UpdatestatsYearly(statsYearly instance);
    partial void DeletestatsYearly(statsYearly instance);
    partial void Insertban(ban instance);
    partial void Updateban(ban instance);
    partial void Deleteban(ban instance);
    partial void Inserthelpcall(helpcall instance);
    partial void Updatehelpcall(helpcall instance);
    partial void Deletehelpcall(helpcall instance);
    partial void Inserthistory(history instance);
    partial void Updatehistory(history instance);
    partial void Deletehistory(history instance);
    partial void Insertleaguestats(leaguestats instance);
    partial void Updateleaguestats(leaguestats instance);
    partial void Deleteleaguestats(leaguestats instance);
    partial void Insertplayer(player instance);
    partial void Updateplayer(player instance);
    partial void Deleteplayer(player instance);
    partial void InsertresetToken(resetToken instance);
    partial void UpdateresetToken(resetToken instance);
    partial void DeleteresetToken(resetToken instance);
    partial void Insertsquad(squad instance);
    partial void Updatesquad(squad instance);
    partial void Deletesquad(squad instance);
    partial void Insertsquadmatch(squadmatch instance);
    partial void Updatesquadmatch(squadmatch instance);
    partial void Deletesquadmatch(squadmatch instance);
    partial void Insertsquadstats(squadstats instance);
    partial void Updatesquadstats(squadstats instance);
    partial void Deletesquadstats(squadstats instance);
    partial void Insertstats(stats instance);
    partial void Updatestats(stats instance);
    partial void Deletestats(stats instance);
    partial void InsertstatsDaily(statsDaily instance);
    partial void UpdatestatsDaily(statsDaily instance);
    partial void DeletestatsDaily(statsDaily instance);
    partial void InsertstatsMonthly(statsMonthly instance);
    partial void UpdatestatsMonthly(statsMonthly instance);
    partial void DeletestatsMonthly(statsMonthly instance);
    partial void InsertstatsWeekly(statsWeekly instance);
    partial void UpdatestatsWeekly(statsWeekly instance);
    partial void DeletestatsWeekly(statsWeekly instance);
    partial void Insertzone(zone instance);
    partial void Updatezone(zone instance);
    partial void Deletezone(zone instance);
    partial void Insertalias(alias instance);
    partial void Updatealias(alias instance);
    partial void Deletealias(alias instance);
    #endregion
		
		public InfantryDataContext() : 
				base(global::InfServer.Database.Properties.Settings.Default.DataConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public InfantryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InfantryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InfantryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InfantryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<statsYearly> statsYearlies
		{
			get
			{
				return this.GetTable<statsYearly>();
			}
		}
		
		public System.Data.Linq.Table<ban> bans
		{
			get
			{
				return this.GetTable<ban>();
			}
		}
		
		public System.Data.Linq.Table<helpcall> helpcalls
		{
			get
			{
				return this.GetTable<helpcall>();
			}
		}
		
		public System.Data.Linq.Table<history> histories
		{
			get
			{
				return this.GetTable<history>();
			}
		}
		
		public System.Data.Linq.Table<leaguestats> leaguestats
		{
			get
			{
				return this.GetTable<leaguestats>();
			}
		}
		
		public System.Data.Linq.Table<player> players
		{
			get
			{
				return this.GetTable<player>();
			}
		}
		
		public System.Data.Linq.Table<resetToken> resetTokens
		{
			get
			{
				return this.GetTable<resetToken>();
			}
		}
		
		public System.Data.Linq.Table<squad> squads
		{
			get
			{
				return this.GetTable<squad>();
			}
		}
		
		public System.Data.Linq.Table<squadmatch> squadmatches
		{
			get
			{
				return this.GetTable<squadmatch>();
			}
		}
		
		public System.Data.Linq.Table<squadstats> squadstats
		{
			get
			{
				return this.GetTable<squadstats>();
			}
		}
		
		public System.Data.Linq.Table<stats> stats
		{
			get
			{
				return this.GetTable<stats>();
			}
		}
		
		public System.Data.Linq.Table<statsDaily> statsDailies
		{
			get
			{
				return this.GetTable<statsDaily>();
			}
		}
		
		public System.Data.Linq.Table<statsMonthly> statsMonthlies
		{
			get
			{
				return this.GetTable<statsMonthly>();
			}
		}
		
		public System.Data.Linq.Table<statsWeekly> statsWeeklies
		{
			get
			{
				return this.GetTable<statsWeekly>();
			}
		}
		
		public System.Data.Linq.Table<zone> zones
		{
			get
			{
				return this.GetTable<zone>();
			}
		}
		
		public System.Data.Linq.Table<alias> alias
		{
			get
			{
				return this.GetTable<alias>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _password;
		
		private string _ticket;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _lastAccess;
		
		private int _permission;
		
		private string _email;
		
		private string _IPAddress;
		
		private long _forumID;
		
		private EntitySet<resetToken> _resetTokens;
		
		private EntitySet<alias> _alias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnticketChanging(string value);
    partial void OnticketChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OnlastAccessChanging(System.DateTime value);
    partial void OnlastAccessChanged();
    partial void OnpermissionChanging(int value);
    partial void OnpermissionChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnforumIDChanging(long value);
    partial void OnforumIDChanged();
    #endregion
		
		public account()
		{
			this._resetTokens = new EntitySet<resetToken>(new Action<resetToken>(this.attach_resetTokens), new Action<resetToken>(this.detach_resetTokens));
			this._alias = new EntitySet<alias>(new Action<alias>(this.attach_alias), new Action<alias>(this.detach_alias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket", DbType="VarChar(128)")]
		public string ticket
		{
			get
			{
				return this._ticket;
			}
			set
			{
				if ((this._ticket != value))
				{
					this.OnticketChanging(value);
					this.SendPropertyChanging();
					this._ticket = value;
					this.SendPropertyChanged("ticket");
					this.OnticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastAccess", DbType="DateTime NOT NULL")]
		public System.DateTime lastAccess
		{
			get
			{
				return this._lastAccess;
			}
			set
			{
				if ((this._lastAccess != value))
				{
					this.OnlastAccessChanging(value);
					this.SendPropertyChanging();
					this._lastAccess = value;
					this.SendPropertyChanged("lastAccess");
					this.OnlastAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission", DbType="Int NOT NULL")]
		public int permission
		{
			get
			{
				return this._permission;
			}
			set
			{
				if ((this._permission != value))
				{
					this.OnpermissionChanging(value);
					this.SendPropertyChanging();
					this._permission = value;
					this.SendPropertyChanged("permission");
					this.OnpermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(20)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forumID", DbType="BigInt NOT NULL")]
		public long forumID
		{
			get
			{
				return this._forumID;
			}
			set
			{
				if ((this._forumID != value))
				{
					this.OnforumIDChanging(value);
					this.SendPropertyChanging();
					this._forumID = value;
					this.SendPropertyChanged("forumID");
					this.OnforumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_resetToken", Storage="_resetTokens", ThisKey="id", OtherKey="account")]
		public EntitySet<resetToken> resetTokens
		{
			get
			{
				return this._resetTokens;
			}
			set
			{
				this._resetTokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_alia", Storage="_alias", ThisKey="id", OtherKey="account")]
		public EntitySet<alias> alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				this._alias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_resetTokens(resetToken entity)
		{
			this.SendPropertyChanging();
			entity.account1 = this;
		}
		
		private void detach_resetTokens(resetToken entity)
		{
			this.SendPropertyChanging();
			entity.account1 = null;
		}
		
		private void attach_alias(alias entity)
		{
			this.SendPropertyChanging();
			entity.account1 = this;
		}
		
		private void detach_alias(alias entity)
		{
			this.SendPropertyChanging();
			entity.account1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.statsYearly")]
	public partial class statsYearly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _zone;
		
		private int _experience;
		
		private int _experienceTotal;
		
		private int _kills;
		
		private int _deaths;
		
		private int _killPoints;
		
		private int _deathPoints;
		
		private int _assistPoints;
		
		private int _bonusPoints;
		
		private int _vehicleKills;
		
		private int _vehicleDeaths;
		
		private int _playSeconds;
		
		private System.DateTime _date;
		
		private long _player;
		
		private int _zonestat1;
		
		private int _zonestat2;
		
		private int _zonestat3;
		
		private int _zonestat4;
		
		private int _zonestat5;
		
		private int _zonestat6;
		
		private int _zonestat7;
		
		private int _zonestat8;
		
		private int _zonestat9;
		
		private int _zonestat10;
		
		private int _zonestat11;
		
		private int _zonestat12;
		
		private EntityRef<player> _player1;
		
		private EntityRef<zone> _zone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OnexperienceChanging(int value);
    partial void OnexperienceChanged();
    partial void OnexperienceTotalChanging(int value);
    partial void OnexperienceTotalChanged();
    partial void OnkillsChanging(int value);
    partial void OnkillsChanged();
    partial void OndeathsChanging(int value);
    partial void OndeathsChanged();
    partial void OnkillPointsChanging(int value);
    partial void OnkillPointsChanged();
    partial void OndeathPointsChanging(int value);
    partial void OndeathPointsChanged();
    partial void OnassistPointsChanging(int value);
    partial void OnassistPointsChanged();
    partial void OnbonusPointsChanging(int value);
    partial void OnbonusPointsChanged();
    partial void OnvehicleKillsChanging(int value);
    partial void OnvehicleKillsChanged();
    partial void OnvehicleDeathsChanging(int value);
    partial void OnvehicleDeathsChanged();
    partial void OnplaySecondsChanging(int value);
    partial void OnplaySecondsChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnplayerChanging(long value);
    partial void OnplayerChanged();
    partial void Onzonestat1Changing(int value);
    partial void Onzonestat1Changed();
    partial void Onzonestat2Changing(int value);
    partial void Onzonestat2Changed();
    partial void Onzonestat3Changing(int value);
    partial void Onzonestat3Changed();
    partial void Onzonestat4Changing(int value);
    partial void Onzonestat4Changed();
    partial void Onzonestat5Changing(int value);
    partial void Onzonestat5Changed();
    partial void Onzonestat6Changing(int value);
    partial void Onzonestat6Changed();
    partial void Onzonestat7Changing(int value);
    partial void Onzonestat7Changed();
    partial void Onzonestat8Changing(int value);
    partial void Onzonestat8Changed();
    partial void Onzonestat9Changing(int value);
    partial void Onzonestat9Changed();
    partial void Onzonestat10Changing(int value);
    partial void Onzonestat10Changed();
    partial void Onzonestat11Changing(int value);
    partial void Onzonestat11Changed();
    partial void Onzonestat12Changing(int value);
    partial void Onzonestat12Changed();
    #endregion
		
		public statsYearly()
		{
			this._player1 = default(EntityRef<player>);
			this._zone1 = default(EntityRef<zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					if (this._zone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experience", DbType="Int NOT NULL")]
		public int experience
		{
			get
			{
				return this._experience;
			}
			set
			{
				if ((this._experience != value))
				{
					this.OnexperienceChanging(value);
					this.SendPropertyChanging();
					this._experience = value;
					this.SendPropertyChanged("experience");
					this.OnexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experienceTotal", DbType="Int NOT NULL")]
		public int experienceTotal
		{
			get
			{
				return this._experienceTotal;
			}
			set
			{
				if ((this._experienceTotal != value))
				{
					this.OnexperienceTotalChanging(value);
					this.SendPropertyChanging();
					this._experienceTotal = value;
					this.SendPropertyChanged("experienceTotal");
					this.OnexperienceTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kills", DbType="Int NOT NULL")]
		public int kills
		{
			get
			{
				return this._kills;
			}
			set
			{
				if ((this._kills != value))
				{
					this.OnkillsChanging(value);
					this.SendPropertyChanging();
					this._kills = value;
					this.SendPropertyChanged("kills");
					this.OnkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deaths", DbType="Int NOT NULL")]
		public int deaths
		{
			get
			{
				return this._deaths;
			}
			set
			{
				if ((this._deaths != value))
				{
					this.OndeathsChanging(value);
					this.SendPropertyChanging();
					this._deaths = value;
					this.SendPropertyChanged("deaths");
					this.OndeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_killPoints", DbType="Int NOT NULL")]
		public int killPoints
		{
			get
			{
				return this._killPoints;
			}
			set
			{
				if ((this._killPoints != value))
				{
					this.OnkillPointsChanging(value);
					this.SendPropertyChanging();
					this._killPoints = value;
					this.SendPropertyChanged("killPoints");
					this.OnkillPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deathPoints", DbType="Int NOT NULL")]
		public int deathPoints
		{
			get
			{
				return this._deathPoints;
			}
			set
			{
				if ((this._deathPoints != value))
				{
					this.OndeathPointsChanging(value);
					this.SendPropertyChanging();
					this._deathPoints = value;
					this.SendPropertyChanged("deathPoints");
					this.OndeathPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assistPoints", DbType="Int NOT NULL")]
		public int assistPoints
		{
			get
			{
				return this._assistPoints;
			}
			set
			{
				if ((this._assistPoints != value))
				{
					this.OnassistPointsChanging(value);
					this.SendPropertyChanging();
					this._assistPoints = value;
					this.SendPropertyChanged("assistPoints");
					this.OnassistPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonusPoints", DbType="Int NOT NULL")]
		public int bonusPoints
		{
			get
			{
				return this._bonusPoints;
			}
			set
			{
				if ((this._bonusPoints != value))
				{
					this.OnbonusPointsChanging(value);
					this.SendPropertyChanging();
					this._bonusPoints = value;
					this.SendPropertyChanged("bonusPoints");
					this.OnbonusPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleKills", DbType="Int NOT NULL")]
		public int vehicleKills
		{
			get
			{
				return this._vehicleKills;
			}
			set
			{
				if ((this._vehicleKills != value))
				{
					this.OnvehicleKillsChanging(value);
					this.SendPropertyChanging();
					this._vehicleKills = value;
					this.SendPropertyChanged("vehicleKills");
					this.OnvehicleKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleDeaths", DbType="Int NOT NULL")]
		public int vehicleDeaths
		{
			get
			{
				return this._vehicleDeaths;
			}
			set
			{
				if ((this._vehicleDeaths != value))
				{
					this.OnvehicleDeathsChanging(value);
					this.SendPropertyChanging();
					this._vehicleDeaths = value;
					this.SendPropertyChanged("vehicleDeaths");
					this.OnvehicleDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playSeconds", DbType="Int NOT NULL")]
		public int playSeconds
		{
			get
			{
				return this._playSeconds;
			}
			set
			{
				if ((this._playSeconds != value))
				{
					this.OnplaySecondsChanging(value);
					this.SendPropertyChanging();
					this._playSeconds = value;
					this.SendPropertyChanged("playSeconds");
					this.OnplaySecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player", DbType="BigInt NOT NULL")]
		public long player
		{
			get
			{
				return this._player;
			}
			set
			{
				if ((this._player != value))
				{
					if (this._player1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnplayerChanging(value);
					this.SendPropertyChanging();
					this._player = value;
					this.SendPropertyChanged("player");
					this.OnplayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat1", DbType="Int NOT NULL")]
		public int zonestat1
		{
			get
			{
				return this._zonestat1;
			}
			set
			{
				if ((this._zonestat1 != value))
				{
					this.Onzonestat1Changing(value);
					this.SendPropertyChanging();
					this._zonestat1 = value;
					this.SendPropertyChanged("zonestat1");
					this.Onzonestat1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat2", DbType="Int NOT NULL")]
		public int zonestat2
		{
			get
			{
				return this._zonestat2;
			}
			set
			{
				if ((this._zonestat2 != value))
				{
					this.Onzonestat2Changing(value);
					this.SendPropertyChanging();
					this._zonestat2 = value;
					this.SendPropertyChanged("zonestat2");
					this.Onzonestat2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat3", DbType="Int NOT NULL")]
		public int zonestat3
		{
			get
			{
				return this._zonestat3;
			}
			set
			{
				if ((this._zonestat3 != value))
				{
					this.Onzonestat3Changing(value);
					this.SendPropertyChanging();
					this._zonestat3 = value;
					this.SendPropertyChanged("zonestat3");
					this.Onzonestat3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat4", DbType="Int NOT NULL")]
		public int zonestat4
		{
			get
			{
				return this._zonestat4;
			}
			set
			{
				if ((this._zonestat4 != value))
				{
					this.Onzonestat4Changing(value);
					this.SendPropertyChanging();
					this._zonestat4 = value;
					this.SendPropertyChanged("zonestat4");
					this.Onzonestat4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat5", DbType="Int NOT NULL")]
		public int zonestat5
		{
			get
			{
				return this._zonestat5;
			}
			set
			{
				if ((this._zonestat5 != value))
				{
					this.Onzonestat5Changing(value);
					this.SendPropertyChanging();
					this._zonestat5 = value;
					this.SendPropertyChanged("zonestat5");
					this.Onzonestat5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat6", DbType="Int NOT NULL")]
		public int zonestat6
		{
			get
			{
				return this._zonestat6;
			}
			set
			{
				if ((this._zonestat6 != value))
				{
					this.Onzonestat6Changing(value);
					this.SendPropertyChanging();
					this._zonestat6 = value;
					this.SendPropertyChanged("zonestat6");
					this.Onzonestat6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat7", DbType="Int NOT NULL")]
		public int zonestat7
		{
			get
			{
				return this._zonestat7;
			}
			set
			{
				if ((this._zonestat7 != value))
				{
					this.Onzonestat7Changing(value);
					this.SendPropertyChanging();
					this._zonestat7 = value;
					this.SendPropertyChanged("zonestat7");
					this.Onzonestat7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat8", DbType="Int NOT NULL")]
		public int zonestat8
		{
			get
			{
				return this._zonestat8;
			}
			set
			{
				if ((this._zonestat8 != value))
				{
					this.Onzonestat8Changing(value);
					this.SendPropertyChanging();
					this._zonestat8 = value;
					this.SendPropertyChanged("zonestat8");
					this.Onzonestat8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat9", DbType="Int NOT NULL")]
		public int zonestat9
		{
			get
			{
				return this._zonestat9;
			}
			set
			{
				if ((this._zonestat9 != value))
				{
					this.Onzonestat9Changing(value);
					this.SendPropertyChanging();
					this._zonestat9 = value;
					this.SendPropertyChanged("zonestat9");
					this.Onzonestat9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat10", DbType="Int NOT NULL")]
		public int zonestat10
		{
			get
			{
				return this._zonestat10;
			}
			set
			{
				if ((this._zonestat10 != value))
				{
					this.Onzonestat10Changing(value);
					this.SendPropertyChanging();
					this._zonestat10 = value;
					this.SendPropertyChanged("zonestat10");
					this.Onzonestat10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat11", DbType="Int NOT NULL")]
		public int zonestat11
		{
			get
			{
				return this._zonestat11;
			}
			set
			{
				if ((this._zonestat11 != value))
				{
					this.Onzonestat11Changing(value);
					this.SendPropertyChanging();
					this._zonestat11 = value;
					this.SendPropertyChanged("zonestat11");
					this.Onzonestat11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat12", DbType="Int NOT NULL")]
		public int zonestat12
		{
			get
			{
				return this._zonestat12;
			}
			set
			{
				if ((this._zonestat12 != value))
				{
					this.Onzonestat12Changing(value);
					this.SendPropertyChanging();
					this._zonestat12 = value;
					this.SendPropertyChanged("zonestat12");
					this.Onzonestat12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_statsYearly", Storage="_player1", ThisKey="player", OtherKey="id", IsForeignKey=true)]
		public player player1
		{
			get
			{
				return this._player1.Entity;
			}
			set
			{
				player previousValue = this._player1.Entity;
				if (((previousValue != value) 
							|| (this._player1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player1.Entity = null;
						previousValue.statsYearlies.Remove(this);
					}
					this._player1.Entity = value;
					if ((value != null))
					{
						value.statsYearlies.Add(this);
						this._player = value.id;
					}
					else
					{
						this._player = default(long);
					}
					this.SendPropertyChanged("player1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_statsYearly", Storage="_zone1", ThisKey="zone", OtherKey="id", IsForeignKey=true)]
		public zone zone1
		{
			get
			{
				return this._zone1.Entity;
			}
			set
			{
				zone previousValue = this._zone1.Entity;
				if (((previousValue != value) 
							|| (this._zone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zone1.Entity = null;
						previousValue.statsYearlies.Remove(this);
					}
					this._zone1.Entity = value;
					if ((value != null))
					{
						value.statsYearlies.Add(this);
						this._zone = value.id;
					}
					else
					{
						this._zone = default(long);
					}
					this.SendPropertyChanged("zone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ban")]
	public partial class ban : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private short _type;
		
		private System.Nullable<long> _account;
		
		private string _IPAddress;
		
		private System.Nullable<long> _uid1;
		
		private System.Nullable<long> _uid2;
		
		private System.Nullable<long> _uid3;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _expires;
		
		private System.Nullable<long> _zone;
		
		private string _reason;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntypeChanging(short value);
    partial void OntypeChanged();
    partial void OnaccountChanging(System.Nullable<long> value);
    partial void OnaccountChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void Onuid1Changing(System.Nullable<long> value);
    partial void Onuid1Changed();
    partial void Onuid2Changing(System.Nullable<long> value);
    partial void Onuid2Changed();
    partial void Onuid3Changing(System.Nullable<long> value);
    partial void Onuid3Changed();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnexpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnexpiresChanged();
    partial void OnzoneChanging(System.Nullable<long> value);
    partial void OnzoneChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ban()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="SmallInt NOT NULL")]
		public short type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="BigInt")]
		public System.Nullable<long> account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid1", DbType="BigInt")]
		public System.Nullable<long> uid1
		{
			get
			{
				return this._uid1;
			}
			set
			{
				if ((this._uid1 != value))
				{
					this.Onuid1Changing(value);
					this.SendPropertyChanging();
					this._uid1 = value;
					this.SendPropertyChanged("uid1");
					this.Onuid1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid2", DbType="BigInt")]
		public System.Nullable<long> uid2
		{
			get
			{
				return this._uid2;
			}
			set
			{
				if ((this._uid2 != value))
				{
					this.Onuid2Changing(value);
					this.SendPropertyChanging();
					this._uid2 = value;
					this.SendPropertyChanged("uid2");
					this.Onuid2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid3", DbType="BigInt")]
		public System.Nullable<long> uid3
		{
			get
			{
				return this._uid3;
			}
			set
			{
				if ((this._uid3 != value))
				{
					this.Onuid3Changing(value);
					this.SendPropertyChanging();
					this._uid3 = value;
					this.SendPropertyChanged("uid3");
					this.Onuid3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expires", DbType="DateTime")]
		public System.Nullable<System.DateTime> expires
		{
			get
			{
				return this._expires;
			}
			set
			{
				if ((this._expires != value))
				{
					this.OnexpiresChanging(value);
					this.SendPropertyChanging();
					this._expires = value;
					this.SendPropertyChanged("expires");
					this.OnexpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt")]
		public System.Nullable<long> zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="VarChar(MAX)")]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.helpcall")]
	public partial class helpcall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _sender;
		
		private string _arena;
		
		private string _zone;
		
		private System.DateTime _date;
		
		private string _reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsenderChanging(string value);
    partial void OnsenderChanged();
    partial void OnarenaChanging(string value);
    partial void OnarenaChanged();
    partial void OnzoneChanging(string value);
    partial void OnzoneChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    #endregion
		
		public helpcall()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
					this.OnsenderChanging(value);
					this.SendPropertyChanging();
					this._sender = value;
					this.SendPropertyChanged("sender");
					this.OnsenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arena", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string arena
		{
			get
			{
				return this._arena;
			}
			set
			{
				if ((this._arena != value))
				{
					this.OnarenaChanging(value);
					this.SendPropertyChanging();
					this._arena = value;
					this.SendPropertyChanged("arena");
					this.OnarenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.history")]
	public partial class history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _sender;
		
		private string _recipient;
		
		private string _zone;
		
		private string _arena;
		
		private string _command;
		
		private System.DateTime _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsenderChanging(string value);
    partial void OnsenderChanged();
    partial void OnrecipientChanging(string value);
    partial void OnrecipientChanged();
    partial void OnzoneChanging(string value);
    partial void OnzoneChanged();
    partial void OnarenaChanging(string value);
    partial void OnarenaChanged();
    partial void OncommandChanging(string value);
    partial void OncommandChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public history()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
					this.OnsenderChanging(value);
					this.SendPropertyChanging();
					this._sender = value;
					this.SendPropertyChanged("sender");
					this.OnsenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipient", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string recipient
		{
			get
			{
				return this._recipient;
			}
			set
			{
				if ((this._recipient != value))
				{
					this.OnrecipientChanging(value);
					this.SendPropertyChanging();
					this._recipient = value;
					this.SendPropertyChanged("recipient");
					this.OnrecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arena", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string arena
		{
			get
			{
				return this._arena;
			}
			set
			{
				if ((this._arena != value))
				{
					this.OnarenaChanging(value);
					this.SendPropertyChanging();
					this._arena = value;
					this.SendPropertyChanged("arena");
					this.OnarenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_command", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string command
		{
			get
			{
				return this._command;
			}
			set
			{
				if ((this._command != value))
				{
					this.OncommandChanging(value);
					this.SendPropertyChanging();
					this._command = value;
					this.SendPropertyChanged("command");
					this.OncommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.leaguestats")]
	public partial class leaguestats : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _zone;
		
		private int _kills;
		
		private int _deaths;
		
		private int _killPoints;
		
		private int _deathPoints;
		
		private int _assistPoints;
		
		private int _bonusPoints;
		
		private int _playSeconds;
		
		private long _match;
		
		private long _player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OnkillsChanging(int value);
    partial void OnkillsChanged();
    partial void OndeathsChanging(int value);
    partial void OndeathsChanged();
    partial void OnkillPointsChanging(int value);
    partial void OnkillPointsChanged();
    partial void OndeathPointsChanging(int value);
    partial void OndeathPointsChanged();
    partial void OnassistPointsChanging(int value);
    partial void OnassistPointsChanged();
    partial void OnbonusPointsChanging(int value);
    partial void OnbonusPointsChanged();
    partial void OnplaySecondsChanging(int value);
    partial void OnplaySecondsChanged();
    partial void OnmatchChanging(long value);
    partial void OnmatchChanged();
    partial void OnplayerChanging(long value);
    partial void OnplayerChanged();
    #endregion
		
		public leaguestats()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kills", DbType="Int NOT NULL")]
		public int kills
		{
			get
			{
				return this._kills;
			}
			set
			{
				if ((this._kills != value))
				{
					this.OnkillsChanging(value);
					this.SendPropertyChanging();
					this._kills = value;
					this.SendPropertyChanged("kills");
					this.OnkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deaths", DbType="Int NOT NULL")]
		public int deaths
		{
			get
			{
				return this._deaths;
			}
			set
			{
				if ((this._deaths != value))
				{
					this.OndeathsChanging(value);
					this.SendPropertyChanging();
					this._deaths = value;
					this.SendPropertyChanged("deaths");
					this.OndeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_killPoints", DbType="Int NOT NULL")]
		public int killPoints
		{
			get
			{
				return this._killPoints;
			}
			set
			{
				if ((this._killPoints != value))
				{
					this.OnkillPointsChanging(value);
					this.SendPropertyChanging();
					this._killPoints = value;
					this.SendPropertyChanged("killPoints");
					this.OnkillPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deathPoints", DbType="Int NOT NULL")]
		public int deathPoints
		{
			get
			{
				return this._deathPoints;
			}
			set
			{
				if ((this._deathPoints != value))
				{
					this.OndeathPointsChanging(value);
					this.SendPropertyChanging();
					this._deathPoints = value;
					this.SendPropertyChanged("deathPoints");
					this.OndeathPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assistPoints", DbType="Int NOT NULL")]
		public int assistPoints
		{
			get
			{
				return this._assistPoints;
			}
			set
			{
				if ((this._assistPoints != value))
				{
					this.OnassistPointsChanging(value);
					this.SendPropertyChanging();
					this._assistPoints = value;
					this.SendPropertyChanged("assistPoints");
					this.OnassistPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonusPoints", DbType="Int NOT NULL")]
		public int bonusPoints
		{
			get
			{
				return this._bonusPoints;
			}
			set
			{
				if ((this._bonusPoints != value))
				{
					this.OnbonusPointsChanging(value);
					this.SendPropertyChanging();
					this._bonusPoints = value;
					this.SendPropertyChanged("bonusPoints");
					this.OnbonusPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playSeconds", DbType="Int NOT NULL")]
		public int playSeconds
		{
			get
			{
				return this._playSeconds;
			}
			set
			{
				if ((this._playSeconds != value))
				{
					this.OnplaySecondsChanging(value);
					this.SendPropertyChanging();
					this._playSeconds = value;
					this.SendPropertyChanged("playSeconds");
					this.OnplaySecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_match", DbType="BigInt NOT NULL")]
		public long match
		{
			get
			{
				return this._match;
			}
			set
			{
				if ((this._match != value))
				{
					this.OnmatchChanging(value);
					this.SendPropertyChanging();
					this._match = value;
					this.SendPropertyChanged("match");
					this.OnmatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player", DbType="BigInt NOT NULL")]
		public long player
		{
			get
			{
				return this._player;
			}
			set
			{
				if ((this._player != value))
				{
					this.OnplayerChanging(value);
					this.SendPropertyChanging();
					this._player = value;
					this.SendPropertyChanged("player");
					this.OnplayerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.player")]
	public partial class player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _alias;
		
		private long _zone;
		
		private System.Nullable<long> _squad;
		
		private long _stats;
		
		private short _permission;
		
		private System.DateTime _lastAccess;
		
		private System.Data.Linq.Binary _inventory;
		
		private System.Data.Linq.Binary _skills;
		
		private System.Data.Linq.Binary _banner;
		
		private EntitySet<statsYearly> _statsYearlies;
		
		private EntitySet<statsDaily> _statsDailies;
		
		private EntitySet<statsMonthly> _statsMonthlies;
		
		private EntitySet<statsWeekly> _statsWeeklies;
		
		private EntityRef<squad> _squad1;
		
		private EntityRef<stats> _stats1;
		
		private EntityRef<zone> _zone1;
		
		private EntityRef<alias> _alias1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnaliasChanging(long value);
    partial void OnaliasChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OnsquadChanging(System.Nullable<long> value);
    partial void OnsquadChanged();
    partial void OnstatsChanging(long value);
    partial void OnstatsChanged();
    partial void OnpermissionChanging(short value);
    partial void OnpermissionChanged();
    partial void OnlastAccessChanging(System.DateTime value);
    partial void OnlastAccessChanged();
    partial void OninventoryChanging(System.Data.Linq.Binary value);
    partial void OninventoryChanged();
    partial void OnskillsChanging(System.Data.Linq.Binary value);
    partial void OnskillsChanged();
    partial void OnbannerChanging(System.Data.Linq.Binary value);
    partial void OnbannerChanged();
    #endregion
		
		public player()
		{
			this._statsYearlies = new EntitySet<statsYearly>(new Action<statsYearly>(this.attach_statsYearlies), new Action<statsYearly>(this.detach_statsYearlies));
			this._statsDailies = new EntitySet<statsDaily>(new Action<statsDaily>(this.attach_statsDailies), new Action<statsDaily>(this.detach_statsDailies));
			this._statsMonthlies = new EntitySet<statsMonthly>(new Action<statsMonthly>(this.attach_statsMonthlies), new Action<statsMonthly>(this.detach_statsMonthlies));
			this._statsWeeklies = new EntitySet<statsWeekly>(new Action<statsWeekly>(this.attach_statsWeeklies), new Action<statsWeekly>(this.detach_statsWeeklies));
			this._squad1 = default(EntityRef<squad>);
			this._stats1 = default(EntityRef<stats>);
			this._zone1 = default(EntityRef<zone>);
			this._alias1 = default(EntityRef<alias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alias", DbType="BigInt NOT NULL")]
		public long alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				if ((this._alias != value))
				{
					if (this._alias1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaliasChanging(value);
					this.SendPropertyChanging();
					this._alias = value;
					this.SendPropertyChanged("alias");
					this.OnaliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					if (this._zone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_squad", DbType="BigInt")]
		public System.Nullable<long> squad
		{
			get
			{
				return this._squad;
			}
			set
			{
				if ((this._squad != value))
				{
					if (this._squad1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsquadChanging(value);
					this.SendPropertyChanging();
					this._squad = value;
					this.SendPropertyChanged("squad");
					this.OnsquadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stats", DbType="BigInt NOT NULL")]
		public long stats
		{
			get
			{
				return this._stats;
			}
			set
			{
				if ((this._stats != value))
				{
					if (this._stats1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatsChanging(value);
					this.SendPropertyChanging();
					this._stats = value;
					this.SendPropertyChanged("stats");
					this.OnstatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission", DbType="SmallInt NOT NULL")]
		public short permission
		{
			get
			{
				return this._permission;
			}
			set
			{
				if ((this._permission != value))
				{
					this.OnpermissionChanging(value);
					this.SendPropertyChanging();
					this._permission = value;
					this.SendPropertyChanged("permission");
					this.OnpermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastAccess", DbType="DateTime NOT NULL")]
		public System.DateTime lastAccess
		{
			get
			{
				return this._lastAccess;
			}
			set
			{
				if ((this._lastAccess != value))
				{
					this.OnlastAccessChanging(value);
					this.SendPropertyChanging();
					this._lastAccess = value;
					this.SendPropertyChanged("lastAccess");
					this.OnlastAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventory", DbType="VarBinary(512)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary inventory
		{
			get
			{
				return this._inventory;
			}
			set
			{
				if ((this._inventory != value))
				{
					this.OninventoryChanging(value);
					this.SendPropertyChanging();
					this._inventory = value;
					this.SendPropertyChanged("inventory");
					this.OninventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skills", DbType="VarBinary(512)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary skills
		{
			get
			{
				return this._skills;
			}
			set
			{
				if ((this._skills != value))
				{
					this.OnskillsChanging(value);
					this.SendPropertyChanging();
					this._skills = value;
					this.SendPropertyChanged("skills");
					this.OnskillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_banner", DbType="VarBinary(8000)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary banner
		{
			get
			{
				return this._banner;
			}
			set
			{
				if ((this._banner != value))
				{
					this.OnbannerChanging(value);
					this.SendPropertyChanging();
					this._banner = value;
					this.SendPropertyChanged("banner");
					this.OnbannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_statsYearly", Storage="_statsYearlies", ThisKey="id", OtherKey="player")]
		public EntitySet<statsYearly> statsYearlies
		{
			get
			{
				return this._statsYearlies;
			}
			set
			{
				this._statsYearlies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_statsDaily", Storage="_statsDailies", ThisKey="id", OtherKey="player")]
		public EntitySet<statsDaily> statsDailies
		{
			get
			{
				return this._statsDailies;
			}
			set
			{
				this._statsDailies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_statsMonthly", Storage="_statsMonthlies", ThisKey="id", OtherKey="player")]
		public EntitySet<statsMonthly> statsMonthlies
		{
			get
			{
				return this._statsMonthlies;
			}
			set
			{
				this._statsMonthlies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_statsWeekly", Storage="_statsWeeklies", ThisKey="id", OtherKey="player")]
		public EntitySet<statsWeekly> statsWeeklies
		{
			get
			{
				return this._statsWeeklies;
			}
			set
			{
				this._statsWeeklies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="squad_player", Storage="_squad1", ThisKey="squad", OtherKey="id", IsForeignKey=true)]
		public squad squad1
		{
			get
			{
				return this._squad1.Entity;
			}
			set
			{
				squad previousValue = this._squad1.Entity;
				if (((previousValue != value) 
							|| (this._squad1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._squad1.Entity = null;
						previousValue.players.Remove(this);
					}
					this._squad1.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._squad = value.id;
					}
					else
					{
						this._squad = default(Nullable<long>);
					}
					this.SendPropertyChanged("squad1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stats_player", Storage="_stats1", ThisKey="stats", OtherKey="id", IsForeignKey=true)]
		public stats stats1
		{
			get
			{
				return this._stats1.Entity;
			}
			set
			{
				stats previousValue = this._stats1.Entity;
				if (((previousValue != value) 
							|| (this._stats1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stats1.Entity = null;
						previousValue.players.Remove(this);
					}
					this._stats1.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._stats = value.id;
					}
					else
					{
						this._stats = default(long);
					}
					this.SendPropertyChanged("stats1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_player", Storage="_zone1", ThisKey="zone", OtherKey="id", IsForeignKey=true)]
		public zone zone1
		{
			get
			{
				return this._zone1.Entity;
			}
			set
			{
				zone previousValue = this._zone1.Entity;
				if (((previousValue != value) 
							|| (this._zone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zone1.Entity = null;
						previousValue.players.Remove(this);
					}
					this._zone1.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._zone = value.id;
					}
					else
					{
						this._zone = default(long);
					}
					this.SendPropertyChanged("zone1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="alia_player", Storage="_alias1", ThisKey="alias", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public alias alias1
		{
			get
			{
				return this._alias1.Entity;
			}
			set
			{
				alias previousValue = this._alias1.Entity;
				if (((previousValue != value) 
							|| (this._alias1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._alias1.Entity = null;
						previousValue.players.Remove(this);
					}
					this._alias1.Entity = value;
					if ((value != null))
					{
						value.players.Add(this);
						this._alias = value.id;
					}
					else
					{
						this._alias = default(long);
					}
					this.SendPropertyChanged("alias1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_statsYearlies(statsYearly entity)
		{
			this.SendPropertyChanging();
			entity.player1 = this;
		}
		
		private void detach_statsYearlies(statsYearly entity)
		{
			this.SendPropertyChanging();
			entity.player1 = null;
		}
		
		private void attach_statsDailies(statsDaily entity)
		{
			this.SendPropertyChanging();
			entity.player1 = this;
		}
		
		private void detach_statsDailies(statsDaily entity)
		{
			this.SendPropertyChanging();
			entity.player1 = null;
		}
		
		private void attach_statsMonthlies(statsMonthly entity)
		{
			this.SendPropertyChanging();
			entity.player1 = this;
		}
		
		private void detach_statsMonthlies(statsMonthly entity)
		{
			this.SendPropertyChanging();
			entity.player1 = null;
		}
		
		private void attach_statsWeeklies(statsWeekly entity)
		{
			this.SendPropertyChanging();
			entity.player1 = this;
		}
		
		private void detach_statsWeeklies(statsWeekly entity)
		{
			this.SendPropertyChanging();
			entity.player1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.resetToken")]
	public partial class resetToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _account;
		
		private string _name;
		
		private string _token;
		
		private System.DateTime _expireDate;
		
		private bool _tokenUsed;
		
		private EntityRef<account> _account1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnaccountChanging(long value);
    partial void OnaccountChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntokenChanging(string value);
    partial void OntokenChanged();
    partial void OnexpireDateChanging(System.DateTime value);
    partial void OnexpireDateChanged();
    partial void OntokenUsedChanging(bool value);
    partial void OntokenUsedChanged();
    #endregion
		
		public resetToken()
		{
			this._account1 = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="BigInt NOT NULL")]
		public long account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					if (this._account1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="VarChar(24) NOT NULL", CanBeNull=false)]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expireDate", DbType="DateTime NOT NULL")]
		public System.DateTime expireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				if ((this._expireDate != value))
				{
					this.OnexpireDateChanging(value);
					this.SendPropertyChanging();
					this._expireDate = value;
					this.SendPropertyChanged("expireDate");
					this.OnexpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokenUsed", DbType="Bit NOT NULL")]
		public bool tokenUsed
		{
			get
			{
				return this._tokenUsed;
			}
			set
			{
				if ((this._tokenUsed != value))
				{
					this.OntokenUsedChanging(value);
					this.SendPropertyChanging();
					this._tokenUsed = value;
					this.SendPropertyChanged("tokenUsed");
					this.OntokenUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_resetToken", Storage="_account1", ThisKey="account", OtherKey="id", IsForeignKey=true)]
		public account account1
		{
			get
			{
				return this._account1.Entity;
			}
			set
			{
				account previousValue = this._account1.Entity;
				if (((previousValue != value) 
							|| (this._account1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account1.Entity = null;
						previousValue.resetTokens.Remove(this);
					}
					this._account1.Entity = value;
					if ((value != null))
					{
						value.resetTokens.Add(this);
						this._account = value.id;
					}
					else
					{
						this._account = default(long);
					}
					this.SendPropertyChanged("account1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.squad")]
	public partial class squad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _password;
		
		private System.DateTime _dateCreated;
		
		private long _owner;
		
		private long _zone;
		
		private long _stats;
		
		private EntitySet<player> _players;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OnownerChanging(long value);
    partial void OnownerChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OnstatsChanging(long value);
    partial void OnstatsChanged();
    #endregion
		
		public squad()
		{
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="BigInt NOT NULL")]
		public long owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stats", DbType="BigInt NOT NULL")]
		public long stats
		{
			get
			{
				return this._stats;
			}
			set
			{
				if ((this._stats != value))
				{
					this.OnstatsChanging(value);
					this.SendPropertyChanging();
					this._stats = value;
					this.SendPropertyChanged("stats");
					this.OnstatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="squad_player", Storage="_players", ThisKey="id", OtherKey="squad")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.squad1 = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.squad1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.squadmatch")]
	public partial class squadmatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _zone;
		
		private System.Nullable<System.DateTime> _dateBegin;
		
		private System.Nullable<System.DateTime> _dateEnd;
		
		private long _squad1;
		
		private long _squad2;
		
		private System.Nullable<long> _winner;
		
		private System.Nullable<long> _loser;
		
		private int _season;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OndateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OndateBeginChanged();
    partial void OndateEndChanging(System.Nullable<System.DateTime> value);
    partial void OndateEndChanged();
    partial void Onsquad1Changing(long value);
    partial void Onsquad1Changed();
    partial void Onsquad2Changing(long value);
    partial void Onsquad2Changed();
    partial void OnwinnerChanging(System.Nullable<long> value);
    partial void OnwinnerChanged();
    partial void OnloserChanging(System.Nullable<long> value);
    partial void OnloserChanged();
    partial void OnseasonChanging(int value);
    partial void OnseasonChanged();
    #endregion
		
		public squadmatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateBegin
		{
			get
			{
				return this._dateBegin;
			}
			set
			{
				if ((this._dateBegin != value))
				{
					this.OndateBeginChanging(value);
					this.SendPropertyChanging();
					this._dateBegin = value;
					this.SendPropertyChanged("dateBegin");
					this.OndateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateEnd
		{
			get
			{
				return this._dateEnd;
			}
			set
			{
				if ((this._dateEnd != value))
				{
					this.OndateEndChanging(value);
					this.SendPropertyChanging();
					this._dateEnd = value;
					this.SendPropertyChanged("dateEnd");
					this.OndateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_squad1", DbType="BigInt NOT NULL")]
		public long squad1
		{
			get
			{
				return this._squad1;
			}
			set
			{
				if ((this._squad1 != value))
				{
					this.Onsquad1Changing(value);
					this.SendPropertyChanging();
					this._squad1 = value;
					this.SendPropertyChanged("squad1");
					this.Onsquad1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_squad2", DbType="BigInt NOT NULL")]
		public long squad2
		{
			get
			{
				return this._squad2;
			}
			set
			{
				if ((this._squad2 != value))
				{
					this.Onsquad2Changing(value);
					this.SendPropertyChanging();
					this._squad2 = value;
					this.SendPropertyChanged("squad2");
					this.Onsquad2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winner", DbType="BigInt")]
		public System.Nullable<long> winner
		{
			get
			{
				return this._winner;
			}
			set
			{
				if ((this._winner != value))
				{
					this.OnwinnerChanging(value);
					this.SendPropertyChanging();
					this._winner = value;
					this.SendPropertyChanged("winner");
					this.OnwinnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loser", DbType="BigInt")]
		public System.Nullable<long> loser
		{
			get
			{
				return this._loser;
			}
			set
			{
				if ((this._loser != value))
				{
					this.OnloserChanging(value);
					this.SendPropertyChanging();
					this._loser = value;
					this.SendPropertyChanged("loser");
					this.OnloserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_season", DbType="Int NOT NULL")]
		public int season
		{
			get
			{
				return this._season;
			}
			set
			{
				if ((this._season != value))
				{
					this.OnseasonChanging(value);
					this.SendPropertyChanging();
					this._season = value;
					this.SendPropertyChanged("season");
					this.OnseasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.squadstats")]
	public partial class squadstats : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _kills;
		
		private int _deaths;
		
		private int _points;
		
		private int _wins;
		
		private int _losses;
		
		private int _rating;
		
		private System.Nullable<int> _season;
		
		private System.Nullable<long> _squad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnkillsChanging(int value);
    partial void OnkillsChanged();
    partial void OndeathsChanging(int value);
    partial void OndeathsChanged();
    partial void OnpointsChanging(int value);
    partial void OnpointsChanged();
    partial void OnwinsChanging(int value);
    partial void OnwinsChanged();
    partial void OnlossesChanging(int value);
    partial void OnlossesChanged();
    partial void OnratingChanging(int value);
    partial void OnratingChanged();
    partial void OnseasonChanging(System.Nullable<int> value);
    partial void OnseasonChanged();
    partial void OnsquadChanging(System.Nullable<long> value);
    partial void OnsquadChanged();
    #endregion
		
		public squadstats()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kills", DbType="Int NOT NULL")]
		public int kills
		{
			get
			{
				return this._kills;
			}
			set
			{
				if ((this._kills != value))
				{
					this.OnkillsChanging(value);
					this.SendPropertyChanging();
					this._kills = value;
					this.SendPropertyChanged("kills");
					this.OnkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deaths", DbType="Int NOT NULL")]
		public int deaths
		{
			get
			{
				return this._deaths;
			}
			set
			{
				if ((this._deaths != value))
				{
					this.OndeathsChanging(value);
					this.SendPropertyChanging();
					this._deaths = value;
					this.SendPropertyChanged("deaths");
					this.OndeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_points", DbType="Int NOT NULL")]
		public int points
		{
			get
			{
				return this._points;
			}
			set
			{
				if ((this._points != value))
				{
					this.OnpointsChanging(value);
					this.SendPropertyChanging();
					this._points = value;
					this.SendPropertyChanged("points");
					this.OnpointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wins", DbType="Int NOT NULL")]
		public int wins
		{
			get
			{
				return this._wins;
			}
			set
			{
				if ((this._wins != value))
				{
					this.OnwinsChanging(value);
					this.SendPropertyChanging();
					this._wins = value;
					this.SendPropertyChanged("wins");
					this.OnwinsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_losses", DbType="Int NOT NULL")]
		public int losses
		{
			get
			{
				return this._losses;
			}
			set
			{
				if ((this._losses != value))
				{
					this.OnlossesChanging(value);
					this.SendPropertyChanging();
					this._losses = value;
					this.SendPropertyChanged("losses");
					this.OnlossesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int NOT NULL")]
		public int rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_season", DbType="Int")]
		public System.Nullable<int> season
		{
			get
			{
				return this._season;
			}
			set
			{
				if ((this._season != value))
				{
					this.OnseasonChanging(value);
					this.SendPropertyChanging();
					this._season = value;
					this.SendPropertyChanged("season");
					this.OnseasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_squad", DbType="BigInt")]
		public System.Nullable<long> squad
		{
			get
			{
				return this._squad;
			}
			set
			{
				if ((this._squad != value))
				{
					this.OnsquadChanging(value);
					this.SendPropertyChanging();
					this._squad = value;
					this.SendPropertyChanged("squad");
					this.OnsquadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stats")]
	public partial class stats : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _zone;
		
		private int _cash;
		
		private int _experience;
		
		private int _experienceTotal;
		
		private int _kills;
		
		private int _deaths;
		
		private int _killPoints;
		
		private int _deathPoints;
		
		private int _assistPoints;
		
		private int _bonusPoints;
		
		private int _vehicleKills;
		
		private int _vehicleDeaths;
		
		private int _playSeconds;
		
		private int _zonestat1;
		
		private int _zonestat2;
		
		private int _zonestat3;
		
		private int _zonestat4;
		
		private int _zonestat5;
		
		private int _zonestat6;
		
		private int _zonestat7;
		
		private int _zonestat8;
		
		private int _zonestat9;
		
		private int _zonestat10;
		
		private int _zonestat11;
		
		private int _zonestat12;
		
		private EntitySet<player> _players;
		
		private EntityRef<zone> _zone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OncashChanging(int value);
    partial void OncashChanged();
    partial void OnexperienceChanging(int value);
    partial void OnexperienceChanged();
    partial void OnexperienceTotalChanging(int value);
    partial void OnexperienceTotalChanged();
    partial void OnkillsChanging(int value);
    partial void OnkillsChanged();
    partial void OndeathsChanging(int value);
    partial void OndeathsChanged();
    partial void OnkillPointsChanging(int value);
    partial void OnkillPointsChanged();
    partial void OndeathPointsChanging(int value);
    partial void OndeathPointsChanged();
    partial void OnassistPointsChanging(int value);
    partial void OnassistPointsChanged();
    partial void OnbonusPointsChanging(int value);
    partial void OnbonusPointsChanged();
    partial void OnvehicleKillsChanging(int value);
    partial void OnvehicleKillsChanged();
    partial void OnvehicleDeathsChanging(int value);
    partial void OnvehicleDeathsChanged();
    partial void OnplaySecondsChanging(int value);
    partial void OnplaySecondsChanged();
    partial void Onzonestat1Changing(int value);
    partial void Onzonestat1Changed();
    partial void Onzonestat2Changing(int value);
    partial void Onzonestat2Changed();
    partial void Onzonestat3Changing(int value);
    partial void Onzonestat3Changed();
    partial void Onzonestat4Changing(int value);
    partial void Onzonestat4Changed();
    partial void Onzonestat5Changing(int value);
    partial void Onzonestat5Changed();
    partial void Onzonestat6Changing(int value);
    partial void Onzonestat6Changed();
    partial void Onzonestat7Changing(int value);
    partial void Onzonestat7Changed();
    partial void Onzonestat8Changing(int value);
    partial void Onzonestat8Changed();
    partial void Onzonestat9Changing(int value);
    partial void Onzonestat9Changed();
    partial void Onzonestat10Changing(int value);
    partial void Onzonestat10Changed();
    partial void Onzonestat11Changing(int value);
    partial void Onzonestat11Changed();
    partial void Onzonestat12Changing(int value);
    partial void Onzonestat12Changed();
    #endregion
		
		public stats()
		{
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			this._zone1 = default(EntityRef<zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					if (this._zone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash", DbType="Int NOT NULL")]
		public int cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experience", DbType="Int NOT NULL")]
		public int experience
		{
			get
			{
				return this._experience;
			}
			set
			{
				if ((this._experience != value))
				{
					this.OnexperienceChanging(value);
					this.SendPropertyChanging();
					this._experience = value;
					this.SendPropertyChanged("experience");
					this.OnexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experienceTotal", DbType="Int NOT NULL")]
		public int experienceTotal
		{
			get
			{
				return this._experienceTotal;
			}
			set
			{
				if ((this._experienceTotal != value))
				{
					this.OnexperienceTotalChanging(value);
					this.SendPropertyChanging();
					this._experienceTotal = value;
					this.SendPropertyChanged("experienceTotal");
					this.OnexperienceTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kills", DbType="Int NOT NULL")]
		public int kills
		{
			get
			{
				return this._kills;
			}
			set
			{
				if ((this._kills != value))
				{
					this.OnkillsChanging(value);
					this.SendPropertyChanging();
					this._kills = value;
					this.SendPropertyChanged("kills");
					this.OnkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deaths", DbType="Int NOT NULL")]
		public int deaths
		{
			get
			{
				return this._deaths;
			}
			set
			{
				if ((this._deaths != value))
				{
					this.OndeathsChanging(value);
					this.SendPropertyChanging();
					this._deaths = value;
					this.SendPropertyChanged("deaths");
					this.OndeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_killPoints", DbType="Int NOT NULL")]
		public int killPoints
		{
			get
			{
				return this._killPoints;
			}
			set
			{
				if ((this._killPoints != value))
				{
					this.OnkillPointsChanging(value);
					this.SendPropertyChanging();
					this._killPoints = value;
					this.SendPropertyChanged("killPoints");
					this.OnkillPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deathPoints", DbType="Int NOT NULL")]
		public int deathPoints
		{
			get
			{
				return this._deathPoints;
			}
			set
			{
				if ((this._deathPoints != value))
				{
					this.OndeathPointsChanging(value);
					this.SendPropertyChanging();
					this._deathPoints = value;
					this.SendPropertyChanged("deathPoints");
					this.OndeathPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assistPoints", DbType="Int NOT NULL")]
		public int assistPoints
		{
			get
			{
				return this._assistPoints;
			}
			set
			{
				if ((this._assistPoints != value))
				{
					this.OnassistPointsChanging(value);
					this.SendPropertyChanging();
					this._assistPoints = value;
					this.SendPropertyChanged("assistPoints");
					this.OnassistPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonusPoints", DbType="Int NOT NULL")]
		public int bonusPoints
		{
			get
			{
				return this._bonusPoints;
			}
			set
			{
				if ((this._bonusPoints != value))
				{
					this.OnbonusPointsChanging(value);
					this.SendPropertyChanging();
					this._bonusPoints = value;
					this.SendPropertyChanged("bonusPoints");
					this.OnbonusPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleKills", DbType="Int NOT NULL")]
		public int vehicleKills
		{
			get
			{
				return this._vehicleKills;
			}
			set
			{
				if ((this._vehicleKills != value))
				{
					this.OnvehicleKillsChanging(value);
					this.SendPropertyChanging();
					this._vehicleKills = value;
					this.SendPropertyChanged("vehicleKills");
					this.OnvehicleKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleDeaths", DbType="Int NOT NULL")]
		public int vehicleDeaths
		{
			get
			{
				return this._vehicleDeaths;
			}
			set
			{
				if ((this._vehicleDeaths != value))
				{
					this.OnvehicleDeathsChanging(value);
					this.SendPropertyChanging();
					this._vehicleDeaths = value;
					this.SendPropertyChanged("vehicleDeaths");
					this.OnvehicleDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playSeconds", DbType="Int NOT NULL")]
		public int playSeconds
		{
			get
			{
				return this._playSeconds;
			}
			set
			{
				if ((this._playSeconds != value))
				{
					this.OnplaySecondsChanging(value);
					this.SendPropertyChanging();
					this._playSeconds = value;
					this.SendPropertyChanged("playSeconds");
					this.OnplaySecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat1", DbType="Int NOT NULL")]
		public int zonestat1
		{
			get
			{
				return this._zonestat1;
			}
			set
			{
				if ((this._zonestat1 != value))
				{
					this.Onzonestat1Changing(value);
					this.SendPropertyChanging();
					this._zonestat1 = value;
					this.SendPropertyChanged("zonestat1");
					this.Onzonestat1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat2", DbType="Int NOT NULL")]
		public int zonestat2
		{
			get
			{
				return this._zonestat2;
			}
			set
			{
				if ((this._zonestat2 != value))
				{
					this.Onzonestat2Changing(value);
					this.SendPropertyChanging();
					this._zonestat2 = value;
					this.SendPropertyChanged("zonestat2");
					this.Onzonestat2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat3", DbType="Int NOT NULL")]
		public int zonestat3
		{
			get
			{
				return this._zonestat3;
			}
			set
			{
				if ((this._zonestat3 != value))
				{
					this.Onzonestat3Changing(value);
					this.SendPropertyChanging();
					this._zonestat3 = value;
					this.SendPropertyChanged("zonestat3");
					this.Onzonestat3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat4", DbType="Int NOT NULL")]
		public int zonestat4
		{
			get
			{
				return this._zonestat4;
			}
			set
			{
				if ((this._zonestat4 != value))
				{
					this.Onzonestat4Changing(value);
					this.SendPropertyChanging();
					this._zonestat4 = value;
					this.SendPropertyChanged("zonestat4");
					this.Onzonestat4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat5", DbType="Int NOT NULL")]
		public int zonestat5
		{
			get
			{
				return this._zonestat5;
			}
			set
			{
				if ((this._zonestat5 != value))
				{
					this.Onzonestat5Changing(value);
					this.SendPropertyChanging();
					this._zonestat5 = value;
					this.SendPropertyChanged("zonestat5");
					this.Onzonestat5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat6", DbType="Int NOT NULL")]
		public int zonestat6
		{
			get
			{
				return this._zonestat6;
			}
			set
			{
				if ((this._zonestat6 != value))
				{
					this.Onzonestat6Changing(value);
					this.SendPropertyChanging();
					this._zonestat6 = value;
					this.SendPropertyChanged("zonestat6");
					this.Onzonestat6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat7", DbType="Int NOT NULL")]
		public int zonestat7
		{
			get
			{
				return this._zonestat7;
			}
			set
			{
				if ((this._zonestat7 != value))
				{
					this.Onzonestat7Changing(value);
					this.SendPropertyChanging();
					this._zonestat7 = value;
					this.SendPropertyChanged("zonestat7");
					this.Onzonestat7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat8", DbType="Int NOT NULL")]
		public int zonestat8
		{
			get
			{
				return this._zonestat8;
			}
			set
			{
				if ((this._zonestat8 != value))
				{
					this.Onzonestat8Changing(value);
					this.SendPropertyChanging();
					this._zonestat8 = value;
					this.SendPropertyChanged("zonestat8");
					this.Onzonestat8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat9", DbType="Int NOT NULL")]
		public int zonestat9
		{
			get
			{
				return this._zonestat9;
			}
			set
			{
				if ((this._zonestat9 != value))
				{
					this.Onzonestat9Changing(value);
					this.SendPropertyChanging();
					this._zonestat9 = value;
					this.SendPropertyChanged("zonestat9");
					this.Onzonestat9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat10", DbType="Int NOT NULL")]
		public int zonestat10
		{
			get
			{
				return this._zonestat10;
			}
			set
			{
				if ((this._zonestat10 != value))
				{
					this.Onzonestat10Changing(value);
					this.SendPropertyChanging();
					this._zonestat10 = value;
					this.SendPropertyChanged("zonestat10");
					this.Onzonestat10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat11", DbType="Int NOT NULL")]
		public int zonestat11
		{
			get
			{
				return this._zonestat11;
			}
			set
			{
				if ((this._zonestat11 != value))
				{
					this.Onzonestat11Changing(value);
					this.SendPropertyChanging();
					this._zonestat11 = value;
					this.SendPropertyChanged("zonestat11");
					this.Onzonestat11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat12", DbType="Int NOT NULL")]
		public int zonestat12
		{
			get
			{
				return this._zonestat12;
			}
			set
			{
				if ((this._zonestat12 != value))
				{
					this.Onzonestat12Changing(value);
					this.SendPropertyChanging();
					this._zonestat12 = value;
					this.SendPropertyChanged("zonestat12");
					this.Onzonestat12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stats_player", Storage="_players", ThisKey="id", OtherKey="stats")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_stats", Storage="_zone1", ThisKey="zone", OtherKey="id", IsForeignKey=true)]
		public zone zone1
		{
			get
			{
				return this._zone1.Entity;
			}
			set
			{
				zone previousValue = this._zone1.Entity;
				if (((previousValue != value) 
							|| (this._zone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zone1.Entity = null;
						previousValue.stats.Remove(this);
					}
					this._zone1.Entity = value;
					if ((value != null))
					{
						value.stats.Add(this);
						this._zone = value.id;
					}
					else
					{
						this._zone = default(long);
					}
					this.SendPropertyChanged("zone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.stats1 = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.stats1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.statsDaily")]
	public partial class statsDaily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _zone;
		
		private int _experience;
		
		private int _experienceTotal;
		
		private int _kills;
		
		private int _deaths;
		
		private int _killPoints;
		
		private int _deathPoints;
		
		private int _assistPoints;
		
		private int _bonusPoints;
		
		private int _vehicleKills;
		
		private int _vehicleDeaths;
		
		private int _playSeconds;
		
		private System.DateTime _date;
		
		private long _player;
		
		private int _zonestat1;
		
		private int _zonestat2;
		
		private int _zonestat3;
		
		private int _zonestat4;
		
		private int _zonestat5;
		
		private int _zonestat6;
		
		private int _zonestat7;
		
		private int _zonestat8;
		
		private int _zonestat9;
		
		private int _zonestat10;
		
		private int _zonestat11;
		
		private int _zonestat12;
		
		private EntityRef<player> _player1;
		
		private EntityRef<zone> _zone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OnexperienceChanging(int value);
    partial void OnexperienceChanged();
    partial void OnexperienceTotalChanging(int value);
    partial void OnexperienceTotalChanged();
    partial void OnkillsChanging(int value);
    partial void OnkillsChanged();
    partial void OndeathsChanging(int value);
    partial void OndeathsChanged();
    partial void OnkillPointsChanging(int value);
    partial void OnkillPointsChanged();
    partial void OndeathPointsChanging(int value);
    partial void OndeathPointsChanged();
    partial void OnassistPointsChanging(int value);
    partial void OnassistPointsChanged();
    partial void OnbonusPointsChanging(int value);
    partial void OnbonusPointsChanged();
    partial void OnvehicleKillsChanging(int value);
    partial void OnvehicleKillsChanged();
    partial void OnvehicleDeathsChanging(int value);
    partial void OnvehicleDeathsChanged();
    partial void OnplaySecondsChanging(int value);
    partial void OnplaySecondsChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnplayerChanging(long value);
    partial void OnplayerChanged();
    partial void Onzonestat1Changing(int value);
    partial void Onzonestat1Changed();
    partial void Onzonestat2Changing(int value);
    partial void Onzonestat2Changed();
    partial void Onzonestat3Changing(int value);
    partial void Onzonestat3Changed();
    partial void Onzonestat4Changing(int value);
    partial void Onzonestat4Changed();
    partial void Onzonestat5Changing(int value);
    partial void Onzonestat5Changed();
    partial void Onzonestat6Changing(int value);
    partial void Onzonestat6Changed();
    partial void Onzonestat7Changing(int value);
    partial void Onzonestat7Changed();
    partial void Onzonestat8Changing(int value);
    partial void Onzonestat8Changed();
    partial void Onzonestat9Changing(int value);
    partial void Onzonestat9Changed();
    partial void Onzonestat10Changing(int value);
    partial void Onzonestat10Changed();
    partial void Onzonestat11Changing(int value);
    partial void Onzonestat11Changed();
    partial void Onzonestat12Changing(int value);
    partial void Onzonestat12Changed();
    #endregion
		
		public statsDaily()
		{
			this._player1 = default(EntityRef<player>);
			this._zone1 = default(EntityRef<zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					if (this._zone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experience", DbType="Int NOT NULL")]
		public int experience
		{
			get
			{
				return this._experience;
			}
			set
			{
				if ((this._experience != value))
				{
					this.OnexperienceChanging(value);
					this.SendPropertyChanging();
					this._experience = value;
					this.SendPropertyChanged("experience");
					this.OnexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experienceTotal", DbType="Int NOT NULL")]
		public int experienceTotal
		{
			get
			{
				return this._experienceTotal;
			}
			set
			{
				if ((this._experienceTotal != value))
				{
					this.OnexperienceTotalChanging(value);
					this.SendPropertyChanging();
					this._experienceTotal = value;
					this.SendPropertyChanged("experienceTotal");
					this.OnexperienceTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kills", DbType="Int NOT NULL")]
		public int kills
		{
			get
			{
				return this._kills;
			}
			set
			{
				if ((this._kills != value))
				{
					this.OnkillsChanging(value);
					this.SendPropertyChanging();
					this._kills = value;
					this.SendPropertyChanged("kills");
					this.OnkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deaths", DbType="Int NOT NULL")]
		public int deaths
		{
			get
			{
				return this._deaths;
			}
			set
			{
				if ((this._deaths != value))
				{
					this.OndeathsChanging(value);
					this.SendPropertyChanging();
					this._deaths = value;
					this.SendPropertyChanged("deaths");
					this.OndeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_killPoints", DbType="Int NOT NULL")]
		public int killPoints
		{
			get
			{
				return this._killPoints;
			}
			set
			{
				if ((this._killPoints != value))
				{
					this.OnkillPointsChanging(value);
					this.SendPropertyChanging();
					this._killPoints = value;
					this.SendPropertyChanged("killPoints");
					this.OnkillPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deathPoints", DbType="Int NOT NULL")]
		public int deathPoints
		{
			get
			{
				return this._deathPoints;
			}
			set
			{
				if ((this._deathPoints != value))
				{
					this.OndeathPointsChanging(value);
					this.SendPropertyChanging();
					this._deathPoints = value;
					this.SendPropertyChanged("deathPoints");
					this.OndeathPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assistPoints", DbType="Int NOT NULL")]
		public int assistPoints
		{
			get
			{
				return this._assistPoints;
			}
			set
			{
				if ((this._assistPoints != value))
				{
					this.OnassistPointsChanging(value);
					this.SendPropertyChanging();
					this._assistPoints = value;
					this.SendPropertyChanged("assistPoints");
					this.OnassistPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonusPoints", DbType="Int NOT NULL")]
		public int bonusPoints
		{
			get
			{
				return this._bonusPoints;
			}
			set
			{
				if ((this._bonusPoints != value))
				{
					this.OnbonusPointsChanging(value);
					this.SendPropertyChanging();
					this._bonusPoints = value;
					this.SendPropertyChanged("bonusPoints");
					this.OnbonusPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleKills", DbType="Int NOT NULL")]
		public int vehicleKills
		{
			get
			{
				return this._vehicleKills;
			}
			set
			{
				if ((this._vehicleKills != value))
				{
					this.OnvehicleKillsChanging(value);
					this.SendPropertyChanging();
					this._vehicleKills = value;
					this.SendPropertyChanged("vehicleKills");
					this.OnvehicleKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleDeaths", DbType="Int NOT NULL")]
		public int vehicleDeaths
		{
			get
			{
				return this._vehicleDeaths;
			}
			set
			{
				if ((this._vehicleDeaths != value))
				{
					this.OnvehicleDeathsChanging(value);
					this.SendPropertyChanging();
					this._vehicleDeaths = value;
					this.SendPropertyChanged("vehicleDeaths");
					this.OnvehicleDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playSeconds", DbType="Int NOT NULL")]
		public int playSeconds
		{
			get
			{
				return this._playSeconds;
			}
			set
			{
				if ((this._playSeconds != value))
				{
					this.OnplaySecondsChanging(value);
					this.SendPropertyChanging();
					this._playSeconds = value;
					this.SendPropertyChanged("playSeconds");
					this.OnplaySecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player", DbType="BigInt NOT NULL")]
		public long player
		{
			get
			{
				return this._player;
			}
			set
			{
				if ((this._player != value))
				{
					if (this._player1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnplayerChanging(value);
					this.SendPropertyChanging();
					this._player = value;
					this.SendPropertyChanged("player");
					this.OnplayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat1", DbType="Int NOT NULL")]
		public int zonestat1
		{
			get
			{
				return this._zonestat1;
			}
			set
			{
				if ((this._zonestat1 != value))
				{
					this.Onzonestat1Changing(value);
					this.SendPropertyChanging();
					this._zonestat1 = value;
					this.SendPropertyChanged("zonestat1");
					this.Onzonestat1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat2", DbType="Int NOT NULL")]
		public int zonestat2
		{
			get
			{
				return this._zonestat2;
			}
			set
			{
				if ((this._zonestat2 != value))
				{
					this.Onzonestat2Changing(value);
					this.SendPropertyChanging();
					this._zonestat2 = value;
					this.SendPropertyChanged("zonestat2");
					this.Onzonestat2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat3", DbType="Int NOT NULL")]
		public int zonestat3
		{
			get
			{
				return this._zonestat3;
			}
			set
			{
				if ((this._zonestat3 != value))
				{
					this.Onzonestat3Changing(value);
					this.SendPropertyChanging();
					this._zonestat3 = value;
					this.SendPropertyChanged("zonestat3");
					this.Onzonestat3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat4", DbType="Int NOT NULL")]
		public int zonestat4
		{
			get
			{
				return this._zonestat4;
			}
			set
			{
				if ((this._zonestat4 != value))
				{
					this.Onzonestat4Changing(value);
					this.SendPropertyChanging();
					this._zonestat4 = value;
					this.SendPropertyChanged("zonestat4");
					this.Onzonestat4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat5", DbType="Int NOT NULL")]
		public int zonestat5
		{
			get
			{
				return this._zonestat5;
			}
			set
			{
				if ((this._zonestat5 != value))
				{
					this.Onzonestat5Changing(value);
					this.SendPropertyChanging();
					this._zonestat5 = value;
					this.SendPropertyChanged("zonestat5");
					this.Onzonestat5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat6", DbType="Int NOT NULL")]
		public int zonestat6
		{
			get
			{
				return this._zonestat6;
			}
			set
			{
				if ((this._zonestat6 != value))
				{
					this.Onzonestat6Changing(value);
					this.SendPropertyChanging();
					this._zonestat6 = value;
					this.SendPropertyChanged("zonestat6");
					this.Onzonestat6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat7", DbType="Int NOT NULL")]
		public int zonestat7
		{
			get
			{
				return this._zonestat7;
			}
			set
			{
				if ((this._zonestat7 != value))
				{
					this.Onzonestat7Changing(value);
					this.SendPropertyChanging();
					this._zonestat7 = value;
					this.SendPropertyChanged("zonestat7");
					this.Onzonestat7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat8", DbType="Int NOT NULL")]
		public int zonestat8
		{
			get
			{
				return this._zonestat8;
			}
			set
			{
				if ((this._zonestat8 != value))
				{
					this.Onzonestat8Changing(value);
					this.SendPropertyChanging();
					this._zonestat8 = value;
					this.SendPropertyChanged("zonestat8");
					this.Onzonestat8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat9", DbType="Int NOT NULL")]
		public int zonestat9
		{
			get
			{
				return this._zonestat9;
			}
			set
			{
				if ((this._zonestat9 != value))
				{
					this.Onzonestat9Changing(value);
					this.SendPropertyChanging();
					this._zonestat9 = value;
					this.SendPropertyChanged("zonestat9");
					this.Onzonestat9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat10", DbType="Int NOT NULL")]
		public int zonestat10
		{
			get
			{
				return this._zonestat10;
			}
			set
			{
				if ((this._zonestat10 != value))
				{
					this.Onzonestat10Changing(value);
					this.SendPropertyChanging();
					this._zonestat10 = value;
					this.SendPropertyChanged("zonestat10");
					this.Onzonestat10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat11", DbType="Int NOT NULL")]
		public int zonestat11
		{
			get
			{
				return this._zonestat11;
			}
			set
			{
				if ((this._zonestat11 != value))
				{
					this.Onzonestat11Changing(value);
					this.SendPropertyChanging();
					this._zonestat11 = value;
					this.SendPropertyChanged("zonestat11");
					this.Onzonestat11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat12", DbType="Int NOT NULL")]
		public int zonestat12
		{
			get
			{
				return this._zonestat12;
			}
			set
			{
				if ((this._zonestat12 != value))
				{
					this.Onzonestat12Changing(value);
					this.SendPropertyChanging();
					this._zonestat12 = value;
					this.SendPropertyChanged("zonestat12");
					this.Onzonestat12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_statsDaily", Storage="_player1", ThisKey="player", OtherKey="id", IsForeignKey=true)]
		public player player1
		{
			get
			{
				return this._player1.Entity;
			}
			set
			{
				player previousValue = this._player1.Entity;
				if (((previousValue != value) 
							|| (this._player1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player1.Entity = null;
						previousValue.statsDailies.Remove(this);
					}
					this._player1.Entity = value;
					if ((value != null))
					{
						value.statsDailies.Add(this);
						this._player = value.id;
					}
					else
					{
						this._player = default(long);
					}
					this.SendPropertyChanged("player1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_statsDaily", Storage="_zone1", ThisKey="zone", OtherKey="id", IsForeignKey=true)]
		public zone zone1
		{
			get
			{
				return this._zone1.Entity;
			}
			set
			{
				zone previousValue = this._zone1.Entity;
				if (((previousValue != value) 
							|| (this._zone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zone1.Entity = null;
						previousValue.statsDailies.Remove(this);
					}
					this._zone1.Entity = value;
					if ((value != null))
					{
						value.statsDailies.Add(this);
						this._zone = value.id;
					}
					else
					{
						this._zone = default(long);
					}
					this.SendPropertyChanged("zone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.statsMonthly")]
	public partial class statsMonthly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _zone;
		
		private int _experience;
		
		private int _experienceTotal;
		
		private int _kills;
		
		private int _deaths;
		
		private int _killPoints;
		
		private int _deathPoints;
		
		private int _assistPoints;
		
		private int _bonusPoints;
		
		private int _vehicleKills;
		
		private int _vehicleDeaths;
		
		private int _playSeconds;
		
		private System.DateTime _date;
		
		private long _player;
		
		private int _zonestat1;
		
		private int _zonestat2;
		
		private int _zonestat3;
		
		private int _zonestat4;
		
		private int _zonestat5;
		
		private int _zonestat6;
		
		private int _zonestat7;
		
		private int _zonestat8;
		
		private int _zonestat9;
		
		private int _zonestat10;
		
		private int _zonestat11;
		
		private int _zonestat12;
		
		private EntityRef<player> _player1;
		
		private EntityRef<zone> _zone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OnexperienceChanging(int value);
    partial void OnexperienceChanged();
    partial void OnexperienceTotalChanging(int value);
    partial void OnexperienceTotalChanged();
    partial void OnkillsChanging(int value);
    partial void OnkillsChanged();
    partial void OndeathsChanging(int value);
    partial void OndeathsChanged();
    partial void OnkillPointsChanging(int value);
    partial void OnkillPointsChanged();
    partial void OndeathPointsChanging(int value);
    partial void OndeathPointsChanged();
    partial void OnassistPointsChanging(int value);
    partial void OnassistPointsChanged();
    partial void OnbonusPointsChanging(int value);
    partial void OnbonusPointsChanged();
    partial void OnvehicleKillsChanging(int value);
    partial void OnvehicleKillsChanged();
    partial void OnvehicleDeathsChanging(int value);
    partial void OnvehicleDeathsChanged();
    partial void OnplaySecondsChanging(int value);
    partial void OnplaySecondsChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnplayerChanging(long value);
    partial void OnplayerChanged();
    partial void Onzonestat1Changing(int value);
    partial void Onzonestat1Changed();
    partial void Onzonestat2Changing(int value);
    partial void Onzonestat2Changed();
    partial void Onzonestat3Changing(int value);
    partial void Onzonestat3Changed();
    partial void Onzonestat4Changing(int value);
    partial void Onzonestat4Changed();
    partial void Onzonestat5Changing(int value);
    partial void Onzonestat5Changed();
    partial void Onzonestat6Changing(int value);
    partial void Onzonestat6Changed();
    partial void Onzonestat7Changing(int value);
    partial void Onzonestat7Changed();
    partial void Onzonestat8Changing(int value);
    partial void Onzonestat8Changed();
    partial void Onzonestat9Changing(int value);
    partial void Onzonestat9Changed();
    partial void Onzonestat10Changing(int value);
    partial void Onzonestat10Changed();
    partial void Onzonestat11Changing(int value);
    partial void Onzonestat11Changed();
    partial void Onzonestat12Changing(int value);
    partial void Onzonestat12Changed();
    #endregion
		
		public statsMonthly()
		{
			this._player1 = default(EntityRef<player>);
			this._zone1 = default(EntityRef<zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					if (this._zone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experience", DbType="Int NOT NULL")]
		public int experience
		{
			get
			{
				return this._experience;
			}
			set
			{
				if ((this._experience != value))
				{
					this.OnexperienceChanging(value);
					this.SendPropertyChanging();
					this._experience = value;
					this.SendPropertyChanged("experience");
					this.OnexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experienceTotal", DbType="Int NOT NULL")]
		public int experienceTotal
		{
			get
			{
				return this._experienceTotal;
			}
			set
			{
				if ((this._experienceTotal != value))
				{
					this.OnexperienceTotalChanging(value);
					this.SendPropertyChanging();
					this._experienceTotal = value;
					this.SendPropertyChanged("experienceTotal");
					this.OnexperienceTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kills", DbType="Int NOT NULL")]
		public int kills
		{
			get
			{
				return this._kills;
			}
			set
			{
				if ((this._kills != value))
				{
					this.OnkillsChanging(value);
					this.SendPropertyChanging();
					this._kills = value;
					this.SendPropertyChanged("kills");
					this.OnkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deaths", DbType="Int NOT NULL")]
		public int deaths
		{
			get
			{
				return this._deaths;
			}
			set
			{
				if ((this._deaths != value))
				{
					this.OndeathsChanging(value);
					this.SendPropertyChanging();
					this._deaths = value;
					this.SendPropertyChanged("deaths");
					this.OndeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_killPoints", DbType="Int NOT NULL")]
		public int killPoints
		{
			get
			{
				return this._killPoints;
			}
			set
			{
				if ((this._killPoints != value))
				{
					this.OnkillPointsChanging(value);
					this.SendPropertyChanging();
					this._killPoints = value;
					this.SendPropertyChanged("killPoints");
					this.OnkillPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deathPoints", DbType="Int NOT NULL")]
		public int deathPoints
		{
			get
			{
				return this._deathPoints;
			}
			set
			{
				if ((this._deathPoints != value))
				{
					this.OndeathPointsChanging(value);
					this.SendPropertyChanging();
					this._deathPoints = value;
					this.SendPropertyChanged("deathPoints");
					this.OndeathPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assistPoints", DbType="Int NOT NULL")]
		public int assistPoints
		{
			get
			{
				return this._assistPoints;
			}
			set
			{
				if ((this._assistPoints != value))
				{
					this.OnassistPointsChanging(value);
					this.SendPropertyChanging();
					this._assistPoints = value;
					this.SendPropertyChanged("assistPoints");
					this.OnassistPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonusPoints", DbType="Int NOT NULL")]
		public int bonusPoints
		{
			get
			{
				return this._bonusPoints;
			}
			set
			{
				if ((this._bonusPoints != value))
				{
					this.OnbonusPointsChanging(value);
					this.SendPropertyChanging();
					this._bonusPoints = value;
					this.SendPropertyChanged("bonusPoints");
					this.OnbonusPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleKills", DbType="Int NOT NULL")]
		public int vehicleKills
		{
			get
			{
				return this._vehicleKills;
			}
			set
			{
				if ((this._vehicleKills != value))
				{
					this.OnvehicleKillsChanging(value);
					this.SendPropertyChanging();
					this._vehicleKills = value;
					this.SendPropertyChanged("vehicleKills");
					this.OnvehicleKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleDeaths", DbType="Int NOT NULL")]
		public int vehicleDeaths
		{
			get
			{
				return this._vehicleDeaths;
			}
			set
			{
				if ((this._vehicleDeaths != value))
				{
					this.OnvehicleDeathsChanging(value);
					this.SendPropertyChanging();
					this._vehicleDeaths = value;
					this.SendPropertyChanged("vehicleDeaths");
					this.OnvehicleDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playSeconds", DbType="Int NOT NULL")]
		public int playSeconds
		{
			get
			{
				return this._playSeconds;
			}
			set
			{
				if ((this._playSeconds != value))
				{
					this.OnplaySecondsChanging(value);
					this.SendPropertyChanging();
					this._playSeconds = value;
					this.SendPropertyChanged("playSeconds");
					this.OnplaySecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player", DbType="BigInt NOT NULL")]
		public long player
		{
			get
			{
				return this._player;
			}
			set
			{
				if ((this._player != value))
				{
					if (this._player1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnplayerChanging(value);
					this.SendPropertyChanging();
					this._player = value;
					this.SendPropertyChanged("player");
					this.OnplayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat1", DbType="Int NOT NULL")]
		public int zonestat1
		{
			get
			{
				return this._zonestat1;
			}
			set
			{
				if ((this._zonestat1 != value))
				{
					this.Onzonestat1Changing(value);
					this.SendPropertyChanging();
					this._zonestat1 = value;
					this.SendPropertyChanged("zonestat1");
					this.Onzonestat1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat2", DbType="Int NOT NULL")]
		public int zonestat2
		{
			get
			{
				return this._zonestat2;
			}
			set
			{
				if ((this._zonestat2 != value))
				{
					this.Onzonestat2Changing(value);
					this.SendPropertyChanging();
					this._zonestat2 = value;
					this.SendPropertyChanged("zonestat2");
					this.Onzonestat2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat3", DbType="Int NOT NULL")]
		public int zonestat3
		{
			get
			{
				return this._zonestat3;
			}
			set
			{
				if ((this._zonestat3 != value))
				{
					this.Onzonestat3Changing(value);
					this.SendPropertyChanging();
					this._zonestat3 = value;
					this.SendPropertyChanged("zonestat3");
					this.Onzonestat3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat4", DbType="Int NOT NULL")]
		public int zonestat4
		{
			get
			{
				return this._zonestat4;
			}
			set
			{
				if ((this._zonestat4 != value))
				{
					this.Onzonestat4Changing(value);
					this.SendPropertyChanging();
					this._zonestat4 = value;
					this.SendPropertyChanged("zonestat4");
					this.Onzonestat4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat5", DbType="Int NOT NULL")]
		public int zonestat5
		{
			get
			{
				return this._zonestat5;
			}
			set
			{
				if ((this._zonestat5 != value))
				{
					this.Onzonestat5Changing(value);
					this.SendPropertyChanging();
					this._zonestat5 = value;
					this.SendPropertyChanged("zonestat5");
					this.Onzonestat5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat6", DbType="Int NOT NULL")]
		public int zonestat6
		{
			get
			{
				return this._zonestat6;
			}
			set
			{
				if ((this._zonestat6 != value))
				{
					this.Onzonestat6Changing(value);
					this.SendPropertyChanging();
					this._zonestat6 = value;
					this.SendPropertyChanged("zonestat6");
					this.Onzonestat6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat7", DbType="Int NOT NULL")]
		public int zonestat7
		{
			get
			{
				return this._zonestat7;
			}
			set
			{
				if ((this._zonestat7 != value))
				{
					this.Onzonestat7Changing(value);
					this.SendPropertyChanging();
					this._zonestat7 = value;
					this.SendPropertyChanged("zonestat7");
					this.Onzonestat7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat8", DbType="Int NOT NULL")]
		public int zonestat8
		{
			get
			{
				return this._zonestat8;
			}
			set
			{
				if ((this._zonestat8 != value))
				{
					this.Onzonestat8Changing(value);
					this.SendPropertyChanging();
					this._zonestat8 = value;
					this.SendPropertyChanged("zonestat8");
					this.Onzonestat8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat9", DbType="Int NOT NULL")]
		public int zonestat9
		{
			get
			{
				return this._zonestat9;
			}
			set
			{
				if ((this._zonestat9 != value))
				{
					this.Onzonestat9Changing(value);
					this.SendPropertyChanging();
					this._zonestat9 = value;
					this.SendPropertyChanged("zonestat9");
					this.Onzonestat9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat10", DbType="Int NOT NULL")]
		public int zonestat10
		{
			get
			{
				return this._zonestat10;
			}
			set
			{
				if ((this._zonestat10 != value))
				{
					this.Onzonestat10Changing(value);
					this.SendPropertyChanging();
					this._zonestat10 = value;
					this.SendPropertyChanged("zonestat10");
					this.Onzonestat10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat11", DbType="Int NOT NULL")]
		public int zonestat11
		{
			get
			{
				return this._zonestat11;
			}
			set
			{
				if ((this._zonestat11 != value))
				{
					this.Onzonestat11Changing(value);
					this.SendPropertyChanging();
					this._zonestat11 = value;
					this.SendPropertyChanged("zonestat11");
					this.Onzonestat11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat12", DbType="Int NOT NULL")]
		public int zonestat12
		{
			get
			{
				return this._zonestat12;
			}
			set
			{
				if ((this._zonestat12 != value))
				{
					this.Onzonestat12Changing(value);
					this.SendPropertyChanging();
					this._zonestat12 = value;
					this.SendPropertyChanged("zonestat12");
					this.Onzonestat12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_statsMonthly", Storage="_player1", ThisKey="player", OtherKey="id", IsForeignKey=true)]
		public player player1
		{
			get
			{
				return this._player1.Entity;
			}
			set
			{
				player previousValue = this._player1.Entity;
				if (((previousValue != value) 
							|| (this._player1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player1.Entity = null;
						previousValue.statsMonthlies.Remove(this);
					}
					this._player1.Entity = value;
					if ((value != null))
					{
						value.statsMonthlies.Add(this);
						this._player = value.id;
					}
					else
					{
						this._player = default(long);
					}
					this.SendPropertyChanged("player1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_statsMonthly", Storage="_zone1", ThisKey="zone", OtherKey="id", IsForeignKey=true)]
		public zone zone1
		{
			get
			{
				return this._zone1.Entity;
			}
			set
			{
				zone previousValue = this._zone1.Entity;
				if (((previousValue != value) 
							|| (this._zone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zone1.Entity = null;
						previousValue.statsMonthlies.Remove(this);
					}
					this._zone1.Entity = value;
					if ((value != null))
					{
						value.statsMonthlies.Add(this);
						this._zone = value.id;
					}
					else
					{
						this._zone = default(long);
					}
					this.SendPropertyChanged("zone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.statsWeekly")]
	public partial class statsWeekly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _zone;
		
		private int _experience;
		
		private int _experienceTotal;
		
		private int _kills;
		
		private int _deaths;
		
		private int _killPoints;
		
		private int _deathPoints;
		
		private int _bonusPoints;
		
		private int _vehicleKills;
		
		private int _vehicleDeaths;
		
		private int _playSeconds;
		
		private System.DateTime _date;
		
		private int _assistPoints;
		
		private long _player;
		
		private int _zonestat1;
		
		private int _zonestat2;
		
		private int _zonestat3;
		
		private int _zonestat4;
		
		private int _zonestat5;
		
		private int _zonestat6;
		
		private int _zonestat7;
		
		private int _zonestat8;
		
		private int _zonestat9;
		
		private int _zonestat10;
		
		private int _zonestat11;
		
		private int _zonestat12;
		
		private EntityRef<player> _player1;
		
		private EntityRef<zone> _zone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnzoneChanging(long value);
    partial void OnzoneChanged();
    partial void OnexperienceChanging(int value);
    partial void OnexperienceChanged();
    partial void OnexperienceTotalChanging(int value);
    partial void OnexperienceTotalChanged();
    partial void OnkillsChanging(int value);
    partial void OnkillsChanged();
    partial void OndeathsChanging(int value);
    partial void OndeathsChanged();
    partial void OnkillPointsChanging(int value);
    partial void OnkillPointsChanged();
    partial void OndeathPointsChanging(int value);
    partial void OndeathPointsChanged();
    partial void OnbonusPointsChanging(int value);
    partial void OnbonusPointsChanged();
    partial void OnvehicleKillsChanging(int value);
    partial void OnvehicleKillsChanged();
    partial void OnvehicleDeathsChanging(int value);
    partial void OnvehicleDeathsChanged();
    partial void OnplaySecondsChanging(int value);
    partial void OnplaySecondsChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnassistPointsChanging(int value);
    partial void OnassistPointsChanged();
    partial void OnplayerChanging(long value);
    partial void OnplayerChanged();
    partial void Onzonestat1Changing(int value);
    partial void Onzonestat1Changed();
    partial void Onzonestat2Changing(int value);
    partial void Onzonestat2Changed();
    partial void Onzonestat3Changing(int value);
    partial void Onzonestat3Changed();
    partial void Onzonestat4Changing(int value);
    partial void Onzonestat4Changed();
    partial void Onzonestat5Changing(int value);
    partial void Onzonestat5Changed();
    partial void Onzonestat6Changing(int value);
    partial void Onzonestat6Changed();
    partial void Onzonestat7Changing(int value);
    partial void Onzonestat7Changed();
    partial void Onzonestat8Changing(int value);
    partial void Onzonestat8Changed();
    partial void Onzonestat9Changing(int value);
    partial void Onzonestat9Changed();
    partial void Onzonestat10Changing(int value);
    partial void Onzonestat10Changed();
    partial void Onzonestat11Changing(int value);
    partial void Onzonestat11Changed();
    partial void Onzonestat12Changing(int value);
    partial void Onzonestat12Changed();
    #endregion
		
		public statsWeekly()
		{
			this._player1 = default(EntityRef<player>);
			this._zone1 = default(EntityRef<zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="BigInt NOT NULL")]
		public long zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					if (this._zone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experience", DbType="Int NOT NULL")]
		public int experience
		{
			get
			{
				return this._experience;
			}
			set
			{
				if ((this._experience != value))
				{
					this.OnexperienceChanging(value);
					this.SendPropertyChanging();
					this._experience = value;
					this.SendPropertyChanged("experience");
					this.OnexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experienceTotal", DbType="Int NOT NULL")]
		public int experienceTotal
		{
			get
			{
				return this._experienceTotal;
			}
			set
			{
				if ((this._experienceTotal != value))
				{
					this.OnexperienceTotalChanging(value);
					this.SendPropertyChanging();
					this._experienceTotal = value;
					this.SendPropertyChanged("experienceTotal");
					this.OnexperienceTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kills", DbType="Int NOT NULL")]
		public int kills
		{
			get
			{
				return this._kills;
			}
			set
			{
				if ((this._kills != value))
				{
					this.OnkillsChanging(value);
					this.SendPropertyChanging();
					this._kills = value;
					this.SendPropertyChanged("kills");
					this.OnkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deaths", DbType="Int NOT NULL")]
		public int deaths
		{
			get
			{
				return this._deaths;
			}
			set
			{
				if ((this._deaths != value))
				{
					this.OndeathsChanging(value);
					this.SendPropertyChanging();
					this._deaths = value;
					this.SendPropertyChanged("deaths");
					this.OndeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_killPoints", DbType="Int NOT NULL")]
		public int killPoints
		{
			get
			{
				return this._killPoints;
			}
			set
			{
				if ((this._killPoints != value))
				{
					this.OnkillPointsChanging(value);
					this.SendPropertyChanging();
					this._killPoints = value;
					this.SendPropertyChanged("killPoints");
					this.OnkillPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deathPoints", DbType="Int NOT NULL")]
		public int deathPoints
		{
			get
			{
				return this._deathPoints;
			}
			set
			{
				if ((this._deathPoints != value))
				{
					this.OndeathPointsChanging(value);
					this.SendPropertyChanging();
					this._deathPoints = value;
					this.SendPropertyChanged("deathPoints");
					this.OndeathPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonusPoints", DbType="Int NOT NULL")]
		public int bonusPoints
		{
			get
			{
				return this._bonusPoints;
			}
			set
			{
				if ((this._bonusPoints != value))
				{
					this.OnbonusPointsChanging(value);
					this.SendPropertyChanging();
					this._bonusPoints = value;
					this.SendPropertyChanged("bonusPoints");
					this.OnbonusPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleKills", DbType="Int NOT NULL")]
		public int vehicleKills
		{
			get
			{
				return this._vehicleKills;
			}
			set
			{
				if ((this._vehicleKills != value))
				{
					this.OnvehicleKillsChanging(value);
					this.SendPropertyChanging();
					this._vehicleKills = value;
					this.SendPropertyChanged("vehicleKills");
					this.OnvehicleKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleDeaths", DbType="Int NOT NULL")]
		public int vehicleDeaths
		{
			get
			{
				return this._vehicleDeaths;
			}
			set
			{
				if ((this._vehicleDeaths != value))
				{
					this.OnvehicleDeathsChanging(value);
					this.SendPropertyChanging();
					this._vehicleDeaths = value;
					this.SendPropertyChanged("vehicleDeaths");
					this.OnvehicleDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playSeconds", DbType="Int NOT NULL")]
		public int playSeconds
		{
			get
			{
				return this._playSeconds;
			}
			set
			{
				if ((this._playSeconds != value))
				{
					this.OnplaySecondsChanging(value);
					this.SendPropertyChanging();
					this._playSeconds = value;
					this.SendPropertyChanged("playSeconds");
					this.OnplaySecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assistPoints", DbType="Int NOT NULL")]
		public int assistPoints
		{
			get
			{
				return this._assistPoints;
			}
			set
			{
				if ((this._assistPoints != value))
				{
					this.OnassistPointsChanging(value);
					this.SendPropertyChanging();
					this._assistPoints = value;
					this.SendPropertyChanged("assistPoints");
					this.OnassistPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player", DbType="BigInt NOT NULL")]
		public long player
		{
			get
			{
				return this._player;
			}
			set
			{
				if ((this._player != value))
				{
					if (this._player1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnplayerChanging(value);
					this.SendPropertyChanging();
					this._player = value;
					this.SendPropertyChanged("player");
					this.OnplayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat1", DbType="Int NOT NULL")]
		public int zonestat1
		{
			get
			{
				return this._zonestat1;
			}
			set
			{
				if ((this._zonestat1 != value))
				{
					this.Onzonestat1Changing(value);
					this.SendPropertyChanging();
					this._zonestat1 = value;
					this.SendPropertyChanged("zonestat1");
					this.Onzonestat1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat2", DbType="Int NOT NULL")]
		public int zonestat2
		{
			get
			{
				return this._zonestat2;
			}
			set
			{
				if ((this._zonestat2 != value))
				{
					this.Onzonestat2Changing(value);
					this.SendPropertyChanging();
					this._zonestat2 = value;
					this.SendPropertyChanged("zonestat2");
					this.Onzonestat2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat3", DbType="Int NOT NULL")]
		public int zonestat3
		{
			get
			{
				return this._zonestat3;
			}
			set
			{
				if ((this._zonestat3 != value))
				{
					this.Onzonestat3Changing(value);
					this.SendPropertyChanging();
					this._zonestat3 = value;
					this.SendPropertyChanged("zonestat3");
					this.Onzonestat3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat4", DbType="Int NOT NULL")]
		public int zonestat4
		{
			get
			{
				return this._zonestat4;
			}
			set
			{
				if ((this._zonestat4 != value))
				{
					this.Onzonestat4Changing(value);
					this.SendPropertyChanging();
					this._zonestat4 = value;
					this.SendPropertyChanged("zonestat4");
					this.Onzonestat4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat5", DbType="Int NOT NULL")]
		public int zonestat5
		{
			get
			{
				return this._zonestat5;
			}
			set
			{
				if ((this._zonestat5 != value))
				{
					this.Onzonestat5Changing(value);
					this.SendPropertyChanging();
					this._zonestat5 = value;
					this.SendPropertyChanged("zonestat5");
					this.Onzonestat5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat6", DbType="Int NOT NULL")]
		public int zonestat6
		{
			get
			{
				return this._zonestat6;
			}
			set
			{
				if ((this._zonestat6 != value))
				{
					this.Onzonestat6Changing(value);
					this.SendPropertyChanging();
					this._zonestat6 = value;
					this.SendPropertyChanged("zonestat6");
					this.Onzonestat6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat7", DbType="Int NOT NULL")]
		public int zonestat7
		{
			get
			{
				return this._zonestat7;
			}
			set
			{
				if ((this._zonestat7 != value))
				{
					this.Onzonestat7Changing(value);
					this.SendPropertyChanging();
					this._zonestat7 = value;
					this.SendPropertyChanged("zonestat7");
					this.Onzonestat7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat8", DbType="Int NOT NULL")]
		public int zonestat8
		{
			get
			{
				return this._zonestat8;
			}
			set
			{
				if ((this._zonestat8 != value))
				{
					this.Onzonestat8Changing(value);
					this.SendPropertyChanging();
					this._zonestat8 = value;
					this.SendPropertyChanged("zonestat8");
					this.Onzonestat8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat9", DbType="Int NOT NULL")]
		public int zonestat9
		{
			get
			{
				return this._zonestat9;
			}
			set
			{
				if ((this._zonestat9 != value))
				{
					this.Onzonestat9Changing(value);
					this.SendPropertyChanging();
					this._zonestat9 = value;
					this.SendPropertyChanged("zonestat9");
					this.Onzonestat9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat10", DbType="Int NOT NULL")]
		public int zonestat10
		{
			get
			{
				return this._zonestat10;
			}
			set
			{
				if ((this._zonestat10 != value))
				{
					this.Onzonestat10Changing(value);
					this.SendPropertyChanging();
					this._zonestat10 = value;
					this.SendPropertyChanged("zonestat10");
					this.Onzonestat10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat11", DbType="Int NOT NULL")]
		public int zonestat11
		{
			get
			{
				return this._zonestat11;
			}
			set
			{
				if ((this._zonestat11 != value))
				{
					this.Onzonestat11Changing(value);
					this.SendPropertyChanging();
					this._zonestat11 = value;
					this.SendPropertyChanged("zonestat11");
					this.Onzonestat11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zonestat12", DbType="Int NOT NULL")]
		public int zonestat12
		{
			get
			{
				return this._zonestat12;
			}
			set
			{
				if ((this._zonestat12 != value))
				{
					this.Onzonestat12Changing(value);
					this.SendPropertyChanging();
					this._zonestat12 = value;
					this.SendPropertyChanged("zonestat12");
					this.Onzonestat12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="player_statsWeekly", Storage="_player1", ThisKey="player", OtherKey="id", IsForeignKey=true)]
		public player player1
		{
			get
			{
				return this._player1.Entity;
			}
			set
			{
				player previousValue = this._player1.Entity;
				if (((previousValue != value) 
							|| (this._player1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._player1.Entity = null;
						previousValue.statsWeeklies.Remove(this);
					}
					this._player1.Entity = value;
					if ((value != null))
					{
						value.statsWeeklies.Add(this);
						this._player = value.id;
					}
					else
					{
						this._player = default(long);
					}
					this.SendPropertyChanged("player1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_statsWeekly", Storage="_zone1", ThisKey="zone", OtherKey="id", IsForeignKey=true)]
		public zone zone1
		{
			get
			{
				return this._zone1.Entity;
			}
			set
			{
				zone previousValue = this._zone1.Entity;
				if (((previousValue != value) 
							|| (this._zone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zone1.Entity = null;
						previousValue.statsWeeklies.Remove(this);
					}
					this._zone1.Entity = value;
					if ((value != null))
					{
						value.statsWeeklies.Add(this);
						this._zone = value.id;
					}
					else
					{
						this._zone = default(long);
					}
					this.SendPropertyChanged("zone1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zone")]
	public partial class zone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _password;
		
		private string _name;
		
		private string _description;
		
		private string _notice;
		
		private short _active;
		
		private string _ip;
		
		private System.Nullable<int> _port;
		
		private System.Nullable<short> _advanced;
		
		private EntitySet<statsYearly> _statsYearlies;
		
		private EntitySet<player> _players;
		
		private EntitySet<stats> _stats;
		
		private EntitySet<statsDaily> _statsDailies;
		
		private EntitySet<statsMonthly> _statsMonthlies;
		
		private EntitySet<statsWeekly> _statsWeeklies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnnoticeChanging(string value);
    partial void OnnoticeChanged();
    partial void OnactiveChanging(short value);
    partial void OnactiveChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnportChanging(System.Nullable<int> value);
    partial void OnportChanged();
    partial void OnadvancedChanging(System.Nullable<short> value);
    partial void OnadvancedChanged();
    #endregion
		
		public zone()
		{
			this._statsYearlies = new EntitySet<statsYearly>(new Action<statsYearly>(this.attach_statsYearlies), new Action<statsYearly>(this.detach_statsYearlies));
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			this._stats = new EntitySet<stats>(new Action<stats>(this.attach_stats), new Action<stats>(this.detach_stats));
			this._statsDailies = new EntitySet<statsDaily>(new Action<statsDaily>(this.attach_statsDailies), new Action<statsDaily>(this.detach_statsDailies));
			this._statsMonthlies = new EntitySet<statsMonthly>(new Action<statsMonthly>(this.attach_statsMonthlies), new Action<statsMonthly>(this.detach_statsMonthlies));
			this._statsWeeklies = new EntitySet<statsWeekly>(new Action<statsWeekly>(this.attach_statsWeeklies), new Action<statsWeekly>(this.detach_statsWeeklies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notice", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string notice
		{
			get
			{
				return this._notice;
			}
			set
			{
				if ((this._notice != value))
				{
					this.OnnoticeChanging(value);
					this.SendPropertyChanging();
					this._notice = value;
					this.SendPropertyChanged("notice");
					this.OnnoticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="SmallInt NOT NULL")]
		public short active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(50)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Int")]
		public System.Nullable<int> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this.OnportChanging(value);
					this.SendPropertyChanging();
					this._port = value;
					this.SendPropertyChanged("port");
					this.OnportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_advanced", DbType="SmallInt")]
		public System.Nullable<short> advanced
		{
			get
			{
				return this._advanced;
			}
			set
			{
				if ((this._advanced != value))
				{
					this.OnadvancedChanging(value);
					this.SendPropertyChanging();
					this._advanced = value;
					this.SendPropertyChanged("advanced");
					this.OnadvancedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_statsYearly", Storage="_statsYearlies", ThisKey="id", OtherKey="zone")]
		public EntitySet<statsYearly> statsYearlies
		{
			get
			{
				return this._statsYearlies;
			}
			set
			{
				this._statsYearlies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_player", Storage="_players", ThisKey="id", OtherKey="zone")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_stats", Storage="_stats", ThisKey="id", OtherKey="zone")]
		public EntitySet<stats> stats
		{
			get
			{
				return this._stats;
			}
			set
			{
				this._stats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_statsDaily", Storage="_statsDailies", ThisKey="id", OtherKey="zone")]
		public EntitySet<statsDaily> statsDailies
		{
			get
			{
				return this._statsDailies;
			}
			set
			{
				this._statsDailies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_statsMonthly", Storage="_statsMonthlies", ThisKey="id", OtherKey="zone")]
		public EntitySet<statsMonthly> statsMonthlies
		{
			get
			{
				return this._statsMonthlies;
			}
			set
			{
				this._statsMonthlies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zone_statsWeekly", Storage="_statsWeeklies", ThisKey="id", OtherKey="zone")]
		public EntitySet<statsWeekly> statsWeeklies
		{
			get
			{
				return this._statsWeeklies;
			}
			set
			{
				this._statsWeeklies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_statsYearlies(statsYearly entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = this;
		}
		
		private void detach_statsYearlies(statsYearly entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = null;
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = null;
		}
		
		private void attach_stats(stats entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = this;
		}
		
		private void detach_stats(stats entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = null;
		}
		
		private void attach_statsDailies(statsDaily entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = this;
		}
		
		private void detach_statsDailies(statsDaily entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = null;
		}
		
		private void attach_statsMonthlies(statsMonthly entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = this;
		}
		
		private void detach_statsMonthlies(statsMonthly entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = null;
		}
		
		private void attach_statsWeeklies(statsWeekly entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = this;
		}
		
		private void detach_statsWeeklies(statsWeekly entity)
		{
			this.SendPropertyChanging();
			entity.zone1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alias")]
	public partial class alias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _account;
		
		private string _name;
		
		private System.DateTime _creation;
		
		private string _IPAddress;
		
		private System.DateTime _lastAccess;
		
		private long _timeplayed;
		
		private int _stealth;
		
		private EntitySet<player> _players;
		
		private EntityRef<account> _account1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnaccountChanging(long value);
    partial void OnaccountChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncreationChanging(System.DateTime value);
    partial void OncreationChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnlastAccessChanging(System.DateTime value);
    partial void OnlastAccessChanged();
    partial void OntimeplayedChanging(long value);
    partial void OntimeplayedChanged();
    partial void OnstealthChanging(int value);
    partial void OnstealthChanged();
    #endregion
		
		public alias()
		{
			this._players = new EntitySet<player>(new Action<player>(this.attach_players), new Action<player>(this.detach_players));
			this._account1 = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="BigInt NOT NULL")]
		public long account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					if (this._account1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation", DbType="DateTime NOT NULL")]
		public System.DateTime creation
		{
			get
			{
				return this._creation;
			}
			set
			{
				if ((this._creation != value))
				{
					this.OncreationChanging(value);
					this.SendPropertyChanging();
					this._creation = value;
					this.SendPropertyChanged("creation");
					this.OncreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastAccess", DbType="DateTime NOT NULL")]
		public System.DateTime lastAccess
		{
			get
			{
				return this._lastAccess;
			}
			set
			{
				if ((this._lastAccess != value))
				{
					this.OnlastAccessChanging(value);
					this.SendPropertyChanging();
					this._lastAccess = value;
					this.SendPropertyChanged("lastAccess");
					this.OnlastAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeplayed", DbType="BigInt NOT NULL")]
		public long timeplayed
		{
			get
			{
				return this._timeplayed;
			}
			set
			{
				if ((this._timeplayed != value))
				{
					this.OntimeplayedChanging(value);
					this.SendPropertyChanging();
					this._timeplayed = value;
					this.SendPropertyChanged("timeplayed");
					this.OntimeplayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stealth", DbType="Int NOT NULL")]
		public int stealth
		{
			get
			{
				return this._stealth;
			}
			set
			{
				if ((this._stealth != value))
				{
					this.OnstealthChanging(value);
					this.SendPropertyChanging();
					this._stealth = value;
					this.SendPropertyChanged("stealth");
					this.OnstealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="alia_player", Storage="_players", ThisKey="id", OtherKey="alias")]
		public EntitySet<player> players
		{
			get
			{
				return this._players;
			}
			set
			{
				this._players.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_alia", Storage="_account1", ThisKey="account", OtherKey="id", IsForeignKey=true)]
		public account account1
		{
			get
			{
				return this._account1.Entity;
			}
			set
			{
				account previousValue = this._account1.Entity;
				if (((previousValue != value) 
							|| (this._account1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account1.Entity = null;
						previousValue.alias.Remove(this);
					}
					this._account1.Entity = value;
					if ((value != null))
					{
						value.alias.Add(this);
						this._account = value.id;
					}
					else
					{
						this._account = default(long);
					}
					this.SendPropertyChanged("account1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.alias1 = this;
		}
		
		private void detach_players(player entity)
		{
			this.SendPropertyChanging();
			entity.alias1 = null;
		}
	}
}
#pragma warning restore 1591
